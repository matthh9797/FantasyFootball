GoalMatrix["West Brom",] <- c(22, 18, 30, 35)
GoalMatrix
teams <- as.character(sort(unique(fixtures$Home.Team)))
teams[17] <- "Tottenham"
teams[13] <- "Man United"
teams[15] <- "Sheffield United"
teams <- as.factor(sort(teams))
team_list$teams_2021 <- teams
rm(teams)
source("code/predict.R")
homeGoalMatrix <- sapply(team_list$teams_2021, function(HomeTeam) sapply(team_list$teams_2021, function(AwayTeam) predict(HomeTeam, AwayTeam, GoalMatrix)[[1]]))
awayGoalMatrix <- sapply(team_list$teams_2021, function(AwayTeam) sapply(team_list$teams_2021, function(HomeTeam) predict(HomeTeam, AwayTeam, GoalMatrix)[[2]]))
expectedGoalMatrix <- rbind(homeGoalMatrix, awayGoalMatrix)
colnames(expectedGoalMatrix) <- team_list$teams_2021
scaledGoalMatrix <- scale(expectedGoalMatrix)
rownames(expectedGoalMatrix) <- c(sapply(team_list$teams_2021, function(x) paste0(x, "@Home")), sapply(team_list$teams_2021, function(x) paste0(x, "@Away")))
rownames(scaledGoalMatrix) <- c(sapply(team_list$teams_2021, function(x) paste0(x, "@Home")), sapply(team_list$teams_2021, function(x) paste0(x, "@Away")))
expectedGoalMatrix
expectedGoalMatrix
rm(list = list(homeGoalMatrix, awayGoalMatrix, predict)
)
rm(list = list(homeGoalMatrix, awayGoalMatrix, predict))
?rm
rm(..., list = list(homeGoalMatrix, awayGoalMatrix, predict))
rm(homeGoalMatrix, awayGoalMatrix, predict)
expectedGoalMatrix
head(fixtures)
fixtures <- transform(fixtures, Predict.Home = NA, Predict.Away = NA, Scaled.Home = NA, Scaled.Away = NA)
fixtures <- transform(fixtures, Home.Team = as.character(Home.Team), Away.Team = as.character(Away.Team))
fixtures <- transform(fixtures, Predict.Home = expectedGoalMatrix[paste0(Away.Team, "@Home"), Home.Team])
fixtures <- transform(fixtures, Scaled.Home = scaledGoalMatrix[paste0(Away.Team, ".Away"), Home.Team])
fixtures <- transform(fixtures, Predict.Away = expectedGoalMatrix[paste0(Home.Team, ".Home"), Away.Team])
fixtures <- transform(fixtures, Scaled.Away = scaledGoalMatrix[paste0(Home.Team, ".Home"), Away.Team])
head(fixtures)
str(fixtures)
fixtures <- transform(fixtures, Predict.Home = "", Predict.Away = NA, Scaled.Home = NA, Scaled.Away = NA)
str(fixtures)
fixtures <- transform(fixtures, Home.Team = as.character(Home.Team), Away.Team = as.character(Away.Team))
fixtures <- transform(fixtures, Predict.Home = expectedGoalMatrix[paste0(Away.Team, "@Home"), Home.Team])
expectedGoalMatrix[paste0("Arsenal", "@Home"), "Liverpool"]
fixtures <- transform(fixtures, Predict.Home = 0, Predict.Away = NA, Scaled.Home = NA, Scaled.Away = NA)
fixtures <- transform(fixtures, Home.Team = as.character(Home.Team), Away.Team = as.character(Away.Team))
fixtures <- transform(fixtures, Predict.Home = expectedGoalMatrix[paste0(Away.Team, "@Home"), Home.Team])
head(fixtures)
Date <- fixtures$Date
Team <- fixtures$Home.Team
fixtures <- transform(fixtures, Predict.Home = expectedGoalMatrix[[paste0(Away.Team, "@Home"), Home.Team])
fixtures <- transform(fixtures, Predict.Home = expectedGoalMatrix[[paste0(Away.Team, "@Home"), Home.Team]])
fixtures <- read.csv("data/fixtures/epl-2020-GMTStandardTime.csv")
head(fixtures)
?as.Date
fixtures <- transform(fixtures, Date = as.Date(Date, format = "%d/%m/%Y"))
head(fixtures)
results <- read.csv("data/results1993-2020/results.csv")
# results 2005 - 2020 (15 seasons)
results <- transform(results, Date = as.Date(Date))
library(dplyr)
results <- filter(results, Date > "2005-08-01")
save(results, file = "data/results.R")
head(results)
source("code/summaryGoals.R")
summaryGoals <- summaryGoals(results)
save(summaryGoals, file = "data/summaryGoals.R")
# season
team_list <- list(
"teams_0506" = droplevels(filter(summaryGoals, Season == "2005-06")$Team[1:20]),
"teams_0607" = droplevels(filter(summaryGoals, Season == "2006-07")$Team[1:20]),
"teams_0708" = droplevels(filter(summaryGoals, Season == "2007-08")$Team[1:20]),
"teams_0809" = droplevels(filter(summaryGoals, Season == "2008-09")$Team[1:20]),
"teams_0910" = droplevels(filter(summaryGoals, Season == "2009-10")$Team[1:20]),
"teams_1011" = droplevels(filter(summaryGoals, Season == "2010-11")$Team[1:20]),
"teams_1112" = droplevels(filter(summaryGoals, Season == "2011-12")$Team[1:20]),
"teams_1213" = droplevels(filter(summaryGoals, Season == "2012-13")$Team[1:20]),
"teams_1314" = droplevels(filter(summaryGoals, Season == "2013-14")$Team[1:20]),
"teams_1415" = droplevels(filter(summaryGoals, Season == "2014-15")$Team[1:20]),
"teams_1516" = droplevels(filter(summaryGoals, Season == "2015-16")$Team[1:20]),
"teams_1617" = droplevels(filter(summaryGoals, Season == "2016-17")$Team[1:20]),
"teams_1718" = droplevels(filter(summaryGoals, Season == "2017-18")$Team[1:20]),
"teams_1819" = droplevels(filter(summaryGoals, Season == "2018-19")$Team[1:20]),
"teams_1920" = droplevels(filter(summaryGoals, Season == "2019-20")$Team[1:20])
)
save(team_list, file = "data/team_list.R")
fixtures <- read.csv("data/fixtures/epl-2020-GMTStandardTime.csv")
fixtures <- transform(fixtures, Date = as.Date(Date, format = "%d/%m/%Y"))
## b. pre-process teams from 2020/2021 to match the format of the results data source
teams <- as.character(sort(unique(fixtures$Home.Team)))
teams[17] <- "Tottenham"
teams[13] <- "Man United"
teams[15] <- "Sheffield United"
teams <- as.factor(sort(teams))
team_list$teams_2021 <- teams
rm(teams)
GoalMatrix <- matrix(ncol = 4, nrow = 20)
colnames(GoalMatrix) <- c("HomeGoals", "AwayGoals", "HomeConcede", "AwayConcede")
rownames(GoalMatrix) <- team_list$teams_2021
# based on eda of 5 seasons graphs found in eda section ...
GoalMatrix["Arsenal",] <- c(40, 22, 24, 26)
GoalMatrix["Chelsea",] <- c(35, 40, 16, 40)
GoalMatrix["Crystal Palace",] <- c(15, 20, 20, 30)
GoalMatrix["Everton",] <- c(30, 25, 21, 35)
GoalMatrix["Leicester",] <- c(37, 35, 16, 22)
GoalMatrix["Liverpool",] <- c(54, 34, 16,18)
GoalMatrix["Man City",] <- c(57, 45, 13, 20)
GoalMatrix["Man United",] <- c(44, 25, 15, 18)
GoalMatrix["Southampton",] <- c(22, 30, 36, 25)
GoalMatrix["Tottenham",] <- c(38, 16, 26, 26)
GoalMatrix["West Ham",] <- c(30, 22, 33, 30)
# based on eda of 2 seasons, graphs found in eda section ...
GoalMatrix["Brighton",] <- c(20, 30, 19, 28)
GoalMatrix["Burnley",] <- c(24,20, 25, 30)
GoalMatrix["Newcastle",] <- c(25, 20, 22, 35)
# based on last season
GoalMatrix["Wolves", ] <- c(28,25,20,22)
GoalMatrix["Aston Villa", ] <- c(22, 20, 30, 35)
GoalMatrix["Sheffield United", ] <- c(22, 20, 30, 35)
# guess
GoalMatrix["Fulham",] <- c(22, 18, 30, 35)
GoalMatrix["Leeds",] <- c(25, 22, 30, 35)
GoalMatrix["West Brom",] <- c(22, 18, 30, 35)
# and a sclaed version which makes the results comparable
source("code/predict.R")
homeGoalMatrix <- sapply(team_list$teams_2021, function(HomeTeam) sapply(team_list$teams_2021, function(AwayTeam) predict(HomeTeam, AwayTeam, GoalMatrix)[[1]]))
awayGoalMatrix <- sapply(team_list$teams_2021, function(AwayTeam) sapply(team_list$teams_2021, function(HomeTeam) predict(HomeTeam, AwayTeam, GoalMatrix)[[2]]))
expectedGoalMatrix <- rbind(homeGoalMatrix, awayGoalMatrix)
colnames(expectedGoalMatrix) <- team_list$teams_2021
scaledGoalMatrix <- scale(expectedGoalMatrix)
rownames(expectedGoalMatrix) <- c(sapply(team_list$teams_2021, function(x) paste0(x, "@Home")), sapply(team_list$teams_2021, function(x) paste0(x, "@Away")))
rownames(scaledGoalMatrix) <- c(sapply(team_list$teams_2021, function(x) paste0(x, "@Home")), sapply(team_list$teams_2021, function(x) paste0(x, "@Away")))
rm(homeGoalMatrix, awayGoalMatrix, predict)
expectedGoalMatrix
head(fixtures)
expectedGoalMatrix <- t(expectedGoalMatrix)
expectedGoalMatrix
scaledGoalMatrix
scaledGoalMatrix <- t(scaledGoalMatrix)
scaledGoalMatrix
expectedGoalMatrix
head(fixtures)
fixtures <- transform(fixtures, Opponent = paste0(Away.Team, "@Home"))
head(fixtures)
expectedGoalMatrix[["Fulham", paste0("Arsenal", "@Home")]]
fixtures <- transform(fixtures, ExpectedGoal = expectedGoalMatrix[[Home.Team, Opponent]])
source("code/expectedGoal.R")
fixtures <- transform(fixtures, ExpectedGoal = expectedGoal[[Home.Team, Opponent]])
expectedGoal(fixtures$Home.Team[[1]], fixtures)
expectedGoal(fixtures$Home.Team[[1]], fixtures$Opponent[[1]])
fixtures$Home.Team[[1]]
fixtures <- transform(fixtures, Home.Team = as.character(Home.Team))
str(fixtures)
fixtures <- transform(fixtures, Home.Team = as.character(Home.Team), Opponent = as.character(Opponent))
expectedGoal(fixtures$Home.Team[[1]], fixtures$Opponent[[1]])
fixtures$Home.Team[[1]]
fixtures$Opponent[[1]]
expectedGoal("Fulham", "Arsenal@Home")
expectedGoalMatrix
expectedGoal("Fulham", "Arsenal@Home", expectedGoalMatrix)
expectedGoal(fixtures$Home.Team[[1]], fixtures$Opponent[[1]], expectedGoalMatrix)
fixtures <- transform(fixtures, ExpectedGoal = expectedGoal(Home.Team, Opponent, expectedGoalMatrix))
?apply
head(fixtures)
df <- rbind(Home.Team, Opponent)
df <- rbind(fixtures$Home.Team, fixtures$Opponent)
df
df <- cbind(fixtures$Home.Team, fixtures$Opponent)
df
apply(df, 1, expectedGoal)
apply(df, 1, function(x, y) expectedGoal(x, y, expectedGoalMatrix))
apply(df, 1, expectedGoal)
for (i in 1:380) {
print(expectedGoalMatrix[df[[i, 1]], df[[i, 2]]])
}
expectedGoalMatrix
results <- read.csv("data/results1993-2020/results.csv")
# results 2005 - 2020 (15 seasons)
results <- transform(results, Date = as.Date(Date))
library(dplyr)
results <- filter(results, Date > "2005-08-01")
# save(results, file = "data/results.R")
source("code/summaryGoals.R")
summaryGoals <- summaryGoals(results)
team_list <- list(
"teams_0506" = droplevels(filter(summaryGoals, Season == "2005-06")$Team[1:20]),
"teams_0607" = droplevels(filter(summaryGoals, Season == "2006-07")$Team[1:20]),
"teams_0708" = droplevels(filter(summaryGoals, Season == "2007-08")$Team[1:20]),
"teams_0809" = droplevels(filter(summaryGoals, Season == "2008-09")$Team[1:20]),
"teams_0910" = droplevels(filter(summaryGoals, Season == "2009-10")$Team[1:20]),
"teams_1011" = droplevels(filter(summaryGoals, Season == "2010-11")$Team[1:20]),
"teams_1112" = droplevels(filter(summaryGoals, Season == "2011-12")$Team[1:20]),
"teams_1213" = droplevels(filter(summaryGoals, Season == "2012-13")$Team[1:20]),
"teams_1314" = droplevels(filter(summaryGoals, Season == "2013-14")$Team[1:20]),
"teams_1415" = droplevels(filter(summaryGoals, Season == "2014-15")$Team[1:20]),
"teams_1516" = droplevels(filter(summaryGoals, Season == "2015-16")$Team[1:20]),
"teams_1617" = droplevels(filter(summaryGoals, Season == "2016-17")$Team[1:20]),
"teams_1718" = droplevels(filter(summaryGoals, Season == "2017-18")$Team[1:20]),
"teams_1819" = droplevels(filter(summaryGoals, Season == "2018-19")$Team[1:20]),
"teams_1920" = droplevels(filter(summaryGoals, Season == "2019-20")$Team[1:20])
)
df <- data.frame("A" = c("a", "b", "c"), "B" = rep("a", 3))
df
df["a"]
df[["a"]]
df[df == "a"]
df[df == "a"] <- "new value"
df
str(df)
df <- data.frame("A" = c("a", "b", "c"), "B" = rep("a", 3))
df <- tranform(df, A = as.character(A), B = as.character(B))
df <- transform(df, A = as.character(A), B = as.character(B))
df
df[df == "a"] <- "new value"
df
rm(df)
fixtures <- read.csv("data/fixtures/epl-2020-GMTStandardTime.csv")
fixtures <- transform(fixtures, Date = as.Date(Date, format = "%d/%m/%Y"))
head(fixtures)
fixtures <- transform(fixtures, Home.Team = as.character(Home.Team), Away.Team = as.character(Away.Team))
fixtures[fixtures == "Spurs"] <- "Tottenham"
fixtures
fixtures <- read.csv("data/fixtures/epl-2020-GMTStandardTime.csv")
fixtures[fixtures == "Spurs"] <- "Tottenham"
fixtures <- transform(fixtures, Home.Team = as.character(Home.Team), Away.Team = as.character(Away.Team))
fixtures[fixtures == "Spurs"] <- "Tottenham"
fixtures[112,]
fixtures <- read.csv("data/fixtures/epl-2020-GMTStandardTime.csv")
fixtures <- transform(fixtures, Home.Team = as.character(Home.Team), Away.Team = as.character(Away.Team))
fixtures[fixtures == "Spurs"] <- "Tottenham"
fixtures[112,]
fixtures[fixtures == "Man Utd"] == "Man United"
fixtures
fixtures[fixtures$Home.Team == "Man Utd"] <- "Man United"
fixtures[fixtures$Home.Team == "Man Utd"]
fixtures$Home.Team == "Man Utd"
fixtures$Home.Team[fixtures$Home.Team == "Man Utd"]
fixtures$Home.Team[fixtures$Home.Team == "Man Utd"] <- "Man United"
fixtures
fixtures$Home.Team[fixtures$Home.Team == "Sheffield Utd"] <- "Sheffield United"
fixtures <- read.csv("data/fixtures/epl-2020-GMTStandardTime.csv")
fixtures <- transform(fixtures, Date = as.Date(Date, format = "%d/%m/%Y"))
# data pre-processing fixtures data to match the team names in results data frame
fixtures <- transform(fixtures, Home.Team = as.character(Home.Team), Away.Team = as.character(Away.Team))
fixtures$Home.Team[fixtures$Home.Team == "Man Utd"] <- "Man United"
fixtures$Home.Team[fixtures$Home.Team == "Sheffield Utd"] <- "Sheffield United"
fixtures$Home.Team[fixtures$Home.Team == "Spurs"] <- "Tottenham"
fixtures$Away.Team[fixtures$Away.Team == "Man Utd"] <- "Man United"
fixtures$Away.Team[fixtures$Away.Team == "Sheffield Utd"] <- "Sheffield United"
fixtures$Away.Team[fixtures$Away.Team == "Spurs"] <- "Tottenham"
fixtures <- transform(fixtures, Home.Team = as.factor(Home.Team), Away.Team = as.factor(Away.Team))
head(fixtures)
team_list$teams_2021 <- sort(unique(fixtures$Home.Team))
team_list$teams_2021
intersect(team_list$teams_2021, team_list$teams_1920)
GoalMatrix <- matrix(ncol = 4, nrow = 20)
colnames(GoalMatrix) <- c("HomeGoals", "AwayGoals", "HomeConcede", "AwayConcede")
rownames(GoalMatrix) <- team_list$teams_2021
# based on eda of 5 seasons graphs found in eda section ...
GoalMatrix["Arsenal",] <- c(40, 22, 24, 26)
GoalMatrix["Chelsea",] <- c(35, 40, 16, 40)
GoalMatrix["Crystal Palace",] <- c(15, 20, 20, 30)
GoalMatrix["Everton",] <- c(30, 25, 21, 35)
GoalMatrix["Leicester",] <- c(37, 35, 16, 22)
GoalMatrix["Liverpool",] <- c(54, 34, 16,18)
GoalMatrix["Man City",] <- c(57, 45, 13, 20)
GoalMatrix["Man United",] <- c(44, 25, 15, 18)
GoalMatrix["Southampton",] <- c(22, 30, 36, 25)
GoalMatrix["Tottenham",] <- c(38, 16, 26, 26)
GoalMatrix["West Ham",] <- c(30, 22, 33, 30)
# based on eda of 2 seasons, graphs found in eda section ...
GoalMatrix["Brighton",] <- c(20, 30, 19, 28)
GoalMatrix["Burnley",] <- c(24,20, 25, 30)
GoalMatrix["Newcastle",] <- c(25, 20, 22, 35)
# based on last season
GoalMatrix["Wolves", ] <- c(28,25,20,22)
GoalMatrix["Aston Villa", ] <- c(22, 20, 30, 35)
GoalMatrix["Sheffield United", ] <- c(22, 20, 30, 35)
# guess
GoalMatrix["Fulham",] <- c(22, 18, 30, 35)
GoalMatrix["Leeds",] <- c(25, 22, 30, 35)
GoalMatrix["West Brom",] <- c(22, 18, 30, 35)
# and a sclaed version which makes the results comparable
source("code/predict.R")
homeGoalMatrix <- sapply(team_list$teams_2021, function(HomeTeam) sapply(team_list$teams_2021, function(AwayTeam) predict(HomeTeam, AwayTeam, GoalMatrix)[[1]]))
awayGoalMatrix <- sapply(team_list$teams_2021, function(AwayTeam) sapply(team_list$teams_2021, function(HomeTeam) predict(HomeTeam, AwayTeam, GoalMatrix)[[2]]))
expectedGoalMatrix <- rbind(homeGoalMatrix, awayGoalMatrix)
colnames(expectedGoalMatrix) <- team_list$teams_2021
scaledGoalMatrix <- scale(expectedGoalMatrix)
rownames(expectedGoalMatrix) <- c(sapply(team_list$teams_2021, function(x) paste0(x, "@Home")), sapply(team_list$teams_2021, function(x) paste0(x, "@Away")))
rownames(scaledGoalMatrix) <- c(sapply(team_list$teams_2021, function(x) paste0(x, "@Home")), sapply(team_list$teams_2021, function(x) paste0(x, "@Away")))
rm(homeGoalMatrix, awayGoalMatrix, predict)
expectedGoalMatrix
expectedGoalMatrix <- t(expectedGoalMatrix)
scaledGoalMatrix <- t(scaledGoalMatrix)
scaledGoalMatrix
expectedGoalMatrix
Opponent <- paste0(fixtures$Away.Team, "@Home")
fixtures <- transform(fixtures, Opponent = Opponent)
fixtures <- transform(fixtures, ExpectedGoal = expectedGoalMatrix[[Home.Team, Opponent]])
str(fixtures)
fixtures <- transform(fixtures, Home.Team = as.character(Home.Team), Away.Team = as.character(Away.Team))
df <- data.frame(Team = fixtures$Home.Team, Opponent = paste0(fixtures$Away.Team, "@Home"))
head(df)
expectedGoalMatrix[["Fulham", "Arsenal@Home"]]
expectedGoalMatrix[["Burnley", "Man United@Home"]]
for (i in 1:380) {
print(expectedGoalMatrix[df[[i, 1]], df[[i, 2]]])
}
source("code/expectedGoal.R")
apply(df, 1, expectedGoal, expectedGoalMatrix = expectedGoalMatrix)
?apply
EG <- rep("", 380)
for (i in 1:380) {
EG[i] <- expectedGoalMatrix[df[[i, 1]], df[[i, 2]]]
}
EG
expectedGoalMatrix
source("code/expectedGoal.R
")
source("code/expectedGoal.R")
apply(df, 1, expectedGoal)
apply(df, 2, expectedGoal)
df1 <- data.frame(Team = fixtures$Home.Team, Opponent = paste0(fixtures$Away.Team, "@Home"))
EGHome <- rep("", 380)
for (i in 1:380) {
EGHome[i] <- expectedGoalMatrix[df1[[i, 1]], df1[[i, 2]]]
}
df2 <- data.frame(Team = fixtures$Away.Team, Opponent = paste0(fixtures$Home.Team, "@Away"))
EGAway <- rep("", 380)
for (i in 1:380) {
EGAway[i] <- expectedGoalMatrix[df2[[i, 1]], df2[[i, 2]]]
}
head(df1)
head(df2)
head(EGHome)
head(EGAway)
df1 <- data.frame(Team = fixtures$Home.Team, Opponent = paste0(fixtures$Away.Team, "@Home"))
EGHome <- rep("", 380)
for (i in 1:380) {
EGHome[i] <- expectedGoalMatrix[df1[[i, 1]], df1[[i, 2]]]
}
df1 <- transform(df1, expectedGoal = EGHome)
df2 <- data.frame(Team = fixtures$Away.Team, Opponent = paste0(fixtures$Home.Team, "@Away"))
EGAway <- rep("", 380)
for (i in 1:380) {
EGAway[i] <- expectedGoalMatrix[df2[[i, 1]], df2[[i, 2]]]
}
df2 <- transform(df2, expectedGoal = EGAway)
head(df1)
## !! the team_list
df1 <- data.frame(Date = fixtures$Date, Team = fixtures$Home.Team, Opponent = paste0(fixtures$Away.Team, "@Home"))
EGHome <- rep("", 380)
for (i in 1:380) {
EGHome[i] <- expectedGoalMatrix[df1[[i, 2]], df1[[i, 3]]]
}
df1 <- transform(df1, expectedGoal = EGHome)
df2 <- data.frame(Date = fixtures$Date, Team = fixtures$Away.Team, Opponent = paste0(fixtures$Home.Team, "@Away"))
EGAway <- rep("", 380)
for (i in 1:380) {
EGAway[i] <- expectedGoalMatrix[df2[[i, 2]], df2[[i, 3]]]
}
df2 <- transform(df2, expectedGoal = EGAway)
head(df1)
head(df2)
df1 <- data.frame(Date = fixtures$Date, Team = fixtures$Home.Team, Opponent = paste0(fixtures$Away.Team, "@Home"))
EGHome <- rep("", 380)
SHome <- rep("", 380)
for (i in 1:380) {
EGHome[i] <- expectedGoalMatrix[df1[[i, 2]], df1[[i, 3]]]
SHome[i] <- scaledGoalMatrix[df1[[i, 2]], df1[[i, 3]]]
}
df1 <- transform(df1, expectedGoal = EGHome, scaledGoal = SHome)
df2 <- data.frame(Date = fixtures$Date, Team = fixtures$Away.Team, Opponent = paste0(fixtures$Home.Team, "@Away"))
EGAway <- rep("", 380)
SAway <- rep("", 380)
for (i in 1:380) {
EGAway[i] <- expectedGoalMatrix[df2[[i, 2]], df2[[i, 3]]]
SAway[i] <- scaledGoalMatrix[df2[[i, 2]], df2[[i, 3]]]
}
df2 <- transform(df2, expectedGoal = EGAway, scaledGoal = SAway)
head(df1)
goalDF <- rbind(df1, df2)
rm(df1, EGHome, SHome, df2, EGAway, SAway, i)
results <- read.csv("data/results1993-2020/results.csv")
# results 2005 - 2020 (15 seasons)
results <- transform(results, Date = as.Date(Date))
library(dplyr)
results <- filter(results, Date > "2005-08-01")
# save(results, file = "data/results.R")
# b. goalSummary is a dataframe containing a summary of the overall goals scored and conceded by each team
# in the Premier league by season
source("code/summaryGoals.R")
summaryGoals <- summaryGoals(results)
# c. team_list is a list object containing factor vectors which contain the teams for each Premier League
# season
team_list <- list(
"teams_0506" = droplevels(filter(summaryGoals, Season == "2005-06")$Team[1:20]),
"teams_0607" = droplevels(filter(summaryGoals, Season == "2006-07")$Team[1:20]),
"teams_0708" = droplevels(filter(summaryGoals, Season == "2007-08")$Team[1:20]),
"teams_0809" = droplevels(filter(summaryGoals, Season == "2008-09")$Team[1:20]),
"teams_0910" = droplevels(filter(summaryGoals, Season == "2009-10")$Team[1:20]),
"teams_1011" = droplevels(filter(summaryGoals, Season == "2010-11")$Team[1:20]),
"teams_1112" = droplevels(filter(summaryGoals, Season == "2011-12")$Team[1:20]),
"teams_1213" = droplevels(filter(summaryGoals, Season == "2012-13")$Team[1:20]),
"teams_1314" = droplevels(filter(summaryGoals, Season == "2013-14")$Team[1:20]),
"teams_1415" = droplevels(filter(summaryGoals, Season == "2014-15")$Team[1:20]),
"teams_1516" = droplevels(filter(summaryGoals, Season == "2015-16")$Team[1:20]),
"teams_1617" = droplevels(filter(summaryGoals, Season == "2016-17")$Team[1:20]),
"teams_1718" = droplevels(filter(summaryGoals, Season == "2017-18")$Team[1:20]),
"teams_1819" = droplevels(filter(summaryGoals, Season == "2018-19")$Team[1:20]),
"teams_1920" = droplevels(filter(summaryGoals, Season == "2019-20")$Team[1:20])
)
## a. Add the list of fixtures
fixtures <- read.csv("data/fixtures/epl-2020-GMTStandardTime.csv")
fixtures <- transform(fixtures, Date = as.Date(Date, format = "%d/%m/%Y"))
## b. pre-process teams from 2020/2021 to match the format of the results data source
fixtures <- transform(fixtures, Home.Team = as.character(Home.Team), Away.Team = as.character(Away.Team))
fixtures$Home.Team[fixtures$Home.Team == "Man Utd"] <- "Man United"
fixtures$Home.Team[fixtures$Home.Team == "Sheffield Utd"] <- "Sheffield United"
fixtures$Home.Team[fixtures$Home.Team == "Spurs"] <- "Tottenham"
fixtures$Away.Team[fixtures$Away.Team == "Man Utd"] <- "Man United"
fixtures$Away.Team[fixtures$Away.Team == "Sheffield Utd"] <- "Sheffield United"
fixtures$Away.Team[fixtures$Away.Team == "Spurs"] <- "Tottenham"
fixtures <- transform(fixtures, Home.Team = as.factor(Home.Team), Away.Team = as.factor(Away.Team))
# add 2020/2021 teams to the team_list
team_list$teams_2021 <- sort(unique(fixtures$Home.Team))
# scored and conceded by each team
GoalMatrix <- matrix(ncol = 4, nrow = 20)
colnames(GoalMatrix) <- c("HomeGoals", "AwayGoals", "HomeConcede", "AwayConcede")
rownames(GoalMatrix) <- team_list$teams_2021
# based on eda of 5 seasons graphs found in eda section ...
GoalMatrix["Arsenal",] <- c(40, 22, 24, 26)
GoalMatrix["Chelsea",] <- c(35, 40, 16, 40)
GoalMatrix["Crystal Palace",] <- c(15, 20, 20, 30)
GoalMatrix["Everton",] <- c(30, 25, 21, 35)
GoalMatrix["Leicester",] <- c(37, 35, 16, 22)
GoalMatrix["Liverpool",] <- c(54, 34, 16,18)
GoalMatrix["Man City",] <- c(57, 45, 13, 20)
GoalMatrix["Man United",] <- c(44, 25, 15, 18)
GoalMatrix["Southampton",] <- c(22, 30, 36, 25)
GoalMatrix["Tottenham",] <- c(38, 16, 26, 26)
GoalMatrix["West Ham",] <- c(30, 22, 33, 30)
# based on eda of 2 seasons, graphs found in eda section ...
GoalMatrix["Brighton",] <- c(20, 30, 19, 28)
GoalMatrix["Burnley",] <- c(24,20, 25, 30)
GoalMatrix["Newcastle",] <- c(25, 20, 22, 35)
# based on last season
GoalMatrix["Wolves", ] <- c(28,25,20,22)
GoalMatrix["Aston Villa", ] <- c(22, 20, 30, 35)
GoalMatrix["Sheffield United", ] <- c(22, 20, 30, 35)
# guess
GoalMatrix["Fulham",] <- c(22, 18, 30, 35)
GoalMatrix["Leeds",] <- c(25, 22, 30, 35)
GoalMatrix["West Brom",] <- c(22, 18, 30, 35)
# and a sclaed version which makes the results comparable
source("code/predict.R")
homeGoalMatrix <- sapply(team_list$teams_2021, function(HomeTeam) sapply(team_list$teams_2021, function(AwayTeam) predict(HomeTeam, AwayTeam, GoalMatrix)[[1]]))
awayGoalMatrix <- sapply(team_list$teams_2021, function(AwayTeam) sapply(team_list$teams_2021, function(HomeTeam) predict(HomeTeam, AwayTeam, GoalMatrix)[[2]]))
expectedGoalMatrix <- rbind(homeGoalMatrix, awayGoalMatrix)
colnames(expectedGoalMatrix) <- team_list$teams_2021
scaledGoalMatrix <- scale(expectedGoalMatrix)
rownames(expectedGoalMatrix) <- c(sapply(team_list$teams_2021, function(x) paste0(x, "@Home")), sapply(team_list$teams_2021, function(x) paste0(x, "@Away")))
rownames(scaledGoalMatrix) <- c(sapply(team_list$teams_2021, function(x) paste0(x, "@Home")), sapply(team_list$teams_2021, function(x) paste0(x, "@Away")))
rm(homeGoalMatrix, awayGoalMatrix, predict)
expectedGoalMatrix <- t(expectedGoalMatrix)
scaledGoalMatrix <- t(scaledGoalMatrix)
df1 <- data.frame(Date = fixtures$Date, Team = fixtures$Home.Team, Opponent = paste0(fixtures$Away.Team, "@Home"))
EGHome <- rep("", 380)
SHome <- rep("", 380)
for (i in 1:380) {
EGHome[i] <- expectedGoalMatrix[df1[[i, 2]], df1[[i, 3]]]
SHome[i] <- scaledGoalMatrix[df1[[i, 2]], df1[[i, 3]]]
}
df1 <- transform(df1, expectedGoal = EGHome, scaledGoal = SHome)
df2 <- data.frame(Date = fixtures$Date, Team = fixtures$Away.Team, Opponent = paste0(fixtures$Home.Team, "@Away"))
EGAway <- rep("", 380)
SAway <- rep("", 380)
for (i in 1:380) {
EGAway[i] <- expectedGoalMatrix[df2[[i, 2]], df2[[i, 3]]]
SAway[i] <- scaledGoalMatrix[df2[[i, 2]], df2[[i, 3]]]
}
df2 <- transform(df2, expectedGoal = EGAway, scaledGoal = SAway)
goalDF <- rbind(df1, df2)
rm(df1, EGHome, SHome, df2, EGAway, SAway, i)
head(goalDF)
tail(goalDF)
expectedGoalMatrix
df2 <- data.frame(Date = fixtures$Date, Team = fixtures$Away.Team, Opponent = paste0(fixtures$Home.Team, "@Away"))
head(df2)
expectedGoalMatrix[df2[[1, 2]], df2[[1, 3]]]
expectedGoalMatrix[df2[[2,1]], df2[[3,1]]]
df2[1,]
df2[1,2]
# add expected and scaled goals to the fixtures dataframe
fixtures <- transform(fixtures, Home.Team = as.character(Home.Team), Away.Team = as.character(Away.Team))
df1 <- data.frame(Date = fixtures$Date, Team = fixtures$Home.Team, Opponent = paste0(fixtures$Away.Team, "@Home"))
EGHome <- rep("", 380)
SHome <- rep("", 380)
for (i in 1:380) {
EGHome[i] <- expectedGoalMatrix[df1[[i, 2]], df1[[i, 3]]]
SHome[i] <- scaledGoalMatrix[df1[[i, 2]], df1[[i, 3]]]
}
df1 <- transform(df1, expectedGoal = EGHome, scaledGoal = SHome)
df2 <- data.frame(Date = fixtures$Date, Team = fixtures$Away.Team, Opponent = paste0(fixtures$Home.Team, "@Away"))
EGAway <- rep("", 380)
SAway <- rep("", 380)
for (i in 1:380) {
EGAway[i] <- expectedGoalMatrix[df2[[i, 2]], df2[[i, 3]]]
SAway[i] <- scaledGoalMatrix[df2[[i, 2]], df2[[i, 3]]]
}
df2 <- transform(df2, expectedGoal = EGAway, scaledGoal = SAway)
goalDF <- rbind(df1, df2)
rm(df1, EGHome, SHome, df2, EGAway, SAway, i)
head(goalDF)
tail(goalDF)
