fixtures$Home.Team[fixtures$Home.Team == "Man Utd"] <- "Man United"
fixtures$Home.Team[fixtures$Home.Team == "Sheffield Utd"] <- "Sheffield United"
fixtures$Home.Team[fixtures$Home.Team == "Spurs"] <- "Tottenham"
fixtures$Away.Team[fixtures$Away.Team == "Man Utd"] <- "Man United"
fixtures$Away.Team[fixtures$Away.Team == "Sheffield Utd"] <- "Sheffield United"
fixtures$Away.Team[fixtures$Away.Team == "Spurs"] <- "Tottenham"
fixtures <- transform(fixtures, Home.Team = as.factor(Home.Team), Away.Team = as.factor(Away.Team))
# add 2020/2021 teams to the team_list
team_list$teams_2021 <- sort(unique(fixtures$Home.Team))
# goals scored by each team in each season
source("code/dataframes/overall_goals.R")
overall_goals <- overall_goals(results)
# rearrange the columns of the dataframes
overall_goals <- overall_goals[ , c(1,2,7,3,5,8,4,6)]
# c. average_goals is a function that inputs the overall goals dataframe and returns a dataframe containing the
# goals per game version of overall_goals with home:away ratios for goals scored and conceded
source("code/dataframes/average_goals.R")
average_goals <- average_goals(overall_goals)
# the 2019/2020 season
results <- read.csv("data/results1993-2020.csv")
# results 2005 - 2020 (15 seasons)
results <- transform(results, Date = as.Date(Date))
library(dplyr)
results <- filter(results, Date > "2005-08-01")
results$HomeTeam <- droplevels(results$HomeTeam)
results$AwayTeam <- droplevels(results$AwayTeam)
# save(results, file = "data/results.R")
# goals scored by each team in each season
source("code/dataframes/overall_goals.R")
overall_goals <- overall_goals(results)
# rearrange the columns of the dataframes
overall_goals <- overall_goals[ , c(1,2,7,3,5,8,4,6)]
# c. average_goals is a function that inputs the overall goals dataframe and returns a dataframe containing the
# goals per game version of overall_goals with home:away ratios for goals scored and conceded
source("code/dataframes/average_goals.R")
average_goals <- average_goals(overall_goals)
# d. team_list is a list object containing factor vectors which contain the teams for each Premier League
# season
team_list <- list(
"2005-06" = droplevels(filter(overall_goals, Season == "2005-06")$Team[1:20]),
"2006-07" = droplevels(filter(overall_goals, Season == "2006-07")$Team[1:20]),
"2007-08" = droplevels(filter(overall_goals, Season == "2007-08")$Team[1:20]),
"2008-09" = droplevels(filter(overall_goals, Season == "2008-09")$Team[1:20]),
"2009-10" = droplevels(filter(overall_goals, Season == "2009-10")$Team[1:20]),
"2010-11" = droplevels(filter(overall_goals, Season == "2010-11")$Team[1:20]),
"2011-12" = droplevels(filter(overall_goals, Season == "2011-12")$Team[1:20]),
"2012-13" = droplevels(filter(overall_goals, Season == "2012-13")$Team[1:20]),
"2013-14" = droplevels(filter(overall_goals, Season == "2013-14")$Team[1:20]),
"2014-15" = droplevels(filter(overall_goals, Season == "2014-15")$Team[1:20]),
"2015-16" = droplevels(filter(overall_goals, Season == "2015-16")$Team[1:20]),
"2015-16" = droplevels(filter(overall_goals, Season == "2016-17")$Team[1:20]),
"2017-18" = droplevels(filter(overall_goals, Season == "2017-18")$Team[1:20]),
"2018-19" = droplevels(filter(overall_goals, Season == "2018-19")$Team[1:20]),
"2019-20" = droplevels(filter(overall_goals, Season == "2019-20")$Team[1:20])
)
team_list$teams_2021 <- sort(unique(fixtures$Home.Team))
head(fixtures)
head(results)
str(fixtures)
score <- as.character(fixtures$Result)
head(score)
strsplit(score[[1]])
?strsplit
strsplit(score[[1]], " - ")
strsplit(score, " - ")
splt <- strsplit(score, " - ")
head(splt)
head(splt[1])
head(splt[[1]][1])
?lapply
?apply
splt[[1]]
?sapply(splt, function(x) x[1])
sapply(splt, function(x) x[1])
sapply(splt, function(x) x[2])
FTHG <- sapply(splt, function(x) x[1])
FTAG <- sapply(splt, function(x) x[1])
fixtures <- transform(fixtures, FTHG = FTHG, FTAG = FTAG)
head(fixtures)
fixtures <- transform(fixtures, FTHG = as.numeric(FTHG), FTAG = as.numeric(FTAG))
head(fixtures)
FTAG <- sapply(splt, function(x) x[2])
fixtures <- transform(fixtures, FTHG = as.numeric(FTHG), FTAG = as.numeric(FTAG))
head(fixtures)
hg <- as.numeric(FTHG)
ag <- as.numeric(FTAG)
fixtures <- transform(fixtures, FTHG = hg, FTAG = ag)
head(fixtures)
head(overall_goals)
head(results)
source("code/dataframes/overall_goals.R")
head(fixtrues)
head(fixtures)
overall_goals(HomeTeam = fixtures$Home.Team, AwayTeam = fixtures$Away.Team, Season = rep("2020-21", 380), FTHG = fixtures$FTHG, FTAG = fixtures$FTAG)
overall_goals(HomeTeam = fixtures$Home.Team, AwayTeam = fixtures$Away.Team, Season = as.factor(rep("2020-21", 380)), FTHG = fixtures$FTHG, FTAG = fixtures$FTAG)
Season <- rep("2020-21", 380)
source("code/dataframes/overall_goals.R")
overall_goals(HomeTeam = fixtures$Home.Team, AwayTeam = fixtures$Away.Team, Season = Season, FTHG = fixtures$FTHG, FTAG = fixtures$FTAG)
class(Season)
class(fixtures$Home.Team)
df1 <- data.frame(HomeTeam = as.factor(fixtures$Home.Team), AwayTeam = as.factor(fixtures$Away.Team), Season = as.factor(Season),
FTHG = as.numeric(fixtures$FTHG), FTAG = as.numeric(fixtures$FTAG))
head(df1)
str(df1)
library(dplyr)
home <- df1 %>% group_by(Season, HomeTeam) %>% summarise(home_goal = sum(FTHG), away_goal = sum(away_goal))
home <- df1 %>% group_by(Season, HomeTeam) %>% summarise(home_goal = sum(FTHG), away_goal = sum(FTAG))
head(home)
home <- df1 %>% group_by(Season, HomeTeam) %>% summarise(home_goal = sum(FTHG, na.rm = TRUE), away_goal = sum(FTAG, na.rm = TRUE))
head(home)
home <- df1 %>% group_by(Season, HomeTeam) %>% summarise(home_goal = sum(FTHG, na.rm = TRUE), home_concede = sum(FTAG, na.rm = TRUE))
home
away <- df %>% group_by(Season, AwayTeam) %>% summarise(away_goal=sum(FTAG), away_concede=sum(FTHG))
away <- df1 %>% group_by(Season, AwayTeam) %>% summarise(away_goal=sum(FTAG), away_concede=sum(FTHG))
head(away)
away <- df1 %>% group_by(Season, AwayTeam) %>% summarise(away_goal=sum(FTAG, na.rm = TRUE), away_concede=sum(FTHG, na.rm = TRUE))
head(away)
source("code/dataframes/overall_goals.R")
overall_goals(HomeTeam = fixtures$Home.Team, AwayTeam = fixtures$Away.Team, Season = rep("2020-21", 380), FTAG = fixtures$FTAG, FTHG = fixtures$FTHG)
average_goals <- average_goals(overall_goals)
source("code/dataframes/average_goals.R")
overall_goals <- overall_goals(HomeTeam = fixtures$Home.Team, AwayTeam = fixtures$Away.Team, Season = rep("2020-21", 380), FTAG = fixtures$FTAG, FTHG = fixtures$FTHG)
average_goals(overall_goals)
source("code/models/model2/model2_score_predict.R")
homeGoalMatrix <- sapply(team_list$teams_2021,
function(HomeTeam) sapply(team_list$teams_2021,
function(AwayTeam) model2_score_predict(HomeTeam, AwayTeam, overall_goals_predict_2021)[[1]]))
awayGoalMatrix <- sapply(team_list$teams_2021,
function(AwayTeam) sapply(team_list$teams_2021,
function(HomeTeam) model2_score_predict(HomeTeam, AwayTeam, overall_goals_predict_2021)[[2]]))
expectedGoalMatrix <- rbind(homeGoalMatrix, awayGoalMatrix)
colnames(expectedGoalMatrix) <- team_list$teams_2021
# use min_max method to normalise data
# min_max_norm <- function(x) {
#   (x - min(x)) / (max(x) - min(x))
# }
# scaledGoalMatrix <- apply(expectedGoalMatrix, 2, min_max_norm)
scaledGoalMatrix <- scale(expectedGoalMatrix)
rownames(expectedGoalMatrix) <- c(sapply(team_list$teams_2021, function(x) paste0(x, "@Home")), sapply(team_list$teams_2021, function(x) paste0(x, "@Away")))
rownames(scaledGoalMatrix) <- c(sapply(team_list$teams_2021, function(x) paste0(x, "@Home")), sapply(team_list$teams_2021, function(x) paste0(x, "@Away")))
rm(homeGoalMatrix, awayGoalMatrix)
expectedGoalMatrix <- t(expectedGoalMatrix)
scaledGoalMatrix <- t(scaledGoalMatrix)
# and a sclaed version which makes the results comparable
source("code/models/model2/model2_score_predict.R")
homeGoalMatrix <- sapply(team_list$teams_2021,
function(HomeTeam) sapply(team_list$teams_2021,
function(AwayTeam) model2_score_predict(HomeTeam, AwayTeam, overall_goals_predict_2021)[[1]]))
awayGoalMatrix <- sapply(team_list$teams_2021,
function(AwayTeam) sapply(team_list$teams_2021,
function(HomeTeam) model2_score_predict(HomeTeam, AwayTeam, overall_goals_predict_2021)[[2]]))
expectedGoalMatrix <- rbind(homeGoalMatrix, awayGoalMatrix)
colnames(expectedGoalMatrix) <- team_list$teams_2021
# use min_max method to normalise data
# min_max_norm <- function(x) {
#   (x - min(x)) / (max(x) - min(x))
# }
# scaledGoalMatrix <- apply(expectedGoalMatrix, 2, min_max_norm)
scaledGoalMatrix <- scale(expectedGoalMatrix)
rownames(expectedGoalMatrix) <- c(sapply(team_list$teams_2021, function(x) paste0(x, "@Home")), sapply(team_list$teams_2021, function(x) paste0(x, "@Away")))
rownames(scaledGoalMatrix) <- c(sapply(team_list$teams_2021, function(x) paste0(x, "@Home")), sapply(team_list$teams_2021, function(x) paste0(x, "@Away")))
rm(homeGoalMatrix, awayGoalMatrix)
expectedGoalMatrix <- t(expectedGoalMatrix)
scaledGoalMatrix <- t(scaledGoalMatrix)
source("code/models/model2/model2_score_predict.R")
homeGoalMatrix <- sapply(team_list$teams_2021,
function(HomeTeam) sapply(team_list$teams_2021,
function(AwayTeam) model2_score_predict(HomeTeam, AwayTeam, overall_goals_predict_2021)[[1]]))
awayGoalMatrix <- sapply(team_list$teams_2021,
function(AwayTeam) sapply(team_list$teams_2021,
function(HomeTeam) model2_score_predict(HomeTeam, AwayTeam, overall_goals_predict_2021)[[2]]))
overall_goals_predict_2021 <- overall_goals
head(overall_goals_predict_2021)
model2_score_predict("Liverpool", "Man City", overall_goals_predict_2021)
overall_goals
sumh <- sum(overall_goals$home_goal)
suma <- sum(overall_goals$away_goal)
sumh
suma
head(fixtures)
results <- read.csv("data/results1993-2020.csv")
# results 2005 - 2020 (15 seasons)
results <- transform(results, Date = as.Date(Date))
library(dplyr)
results <- filter(results, Date > "2005-08-01")
results$HomeTeam <- droplevels(results$HomeTeam)
results$AwayTeam <- droplevels(results$AwayTeam)
# save(results, file = "data/results.R")
# goals scored by each team in each season
source("code/dataframes/overall_goals.R")
overall_goals <- overall_goals(results)
# rearrange the columns of the dataframes
overall_goals <- overall_goals[ , c(1,2,7,3,5,8,4,6)]
# c. average_goals is a function that inputs the overall goals dataframe and returns a dataframe containing the
# goals per game version of overall_goals with home:away ratios for goals scored and conceded
source("code/dataframes/average_goals.R")
average_goals <- average_goals(overall_goals)
?overall_goals
overall_goals()
overall_goals
head(results)
overall_goals(HomeTeam = results$HomeTeam, AwayTeam = results$AwayTeam)
overall_goals(HomeTeam = results$HomeTeam, AwayTeam = results$AwayTeam, Season = results$Season, FTHG = results)
overall_goals(HomeTeam = results$HomeTeam, AwayTeam = results$AwayTeam, Season = results$Season, FTHG = results$FTHG, FTAG = results$FTAG)
abs_goals <- overall_goals(HomeTeam = results$HomeTeam, AwayTeam = results$AwayTeam, Season = results$Season, FTHG = results$FTHG, FTAG = results$FTAG)
head(abs_goals)
avg_goals <- average_goals(overall_goals = abs_goals)
# season
team_list <- list(
"2005-06" = droplevels(filter(overall_goals, Season == "2005-06")$Team[1:20]),
"2006-07" = droplevels(filter(overall_goals, Season == "2006-07")$Team[1:20]),
"2007-08" = droplevels(filter(overall_goals, Season == "2007-08")$Team[1:20]),
"2008-09" = droplevels(filter(overall_goals, Season == "2008-09")$Team[1:20]),
"2009-10" = droplevels(filter(overall_goals, Season == "2009-10")$Team[1:20]),
"2010-11" = droplevels(filter(overall_goals, Season == "2010-11")$Team[1:20]),
"2011-12" = droplevels(filter(overall_goals, Season == "2011-12")$Team[1:20]),
"2012-13" = droplevels(filter(overall_goals, Season == "2012-13")$Team[1:20]),
"2013-14" = droplevels(filter(overall_goals, Season == "2013-14")$Team[1:20]),
"2014-15" = droplevels(filter(overall_goals, Season == "2014-15")$Team[1:20]),
"2015-16" = droplevels(filter(overall_goals, Season == "2015-16")$Team[1:20]),
"2015-16" = droplevels(filter(overall_goals, Season == "2016-17")$Team[1:20]),
"2017-18" = droplevels(filter(overall_goals, Season == "2017-18")$Team[1:20]),
"2018-19" = droplevels(filter(overall_goals, Season == "2018-19")$Team[1:20]),
"2019-20" = droplevels(filter(overall_goals, Season == "2019-20")$Team[1:20])
)
# goals scored by each team in each season
source("code/dataframes/overall_goals.R")
abs_goals <- overall_goals(HomeTeam = results$HomeTeam, AwayTeam = results$AwayTeam,
Season = results$Season, FTHG = results$FTHG, FTAG = results$FTAG)
# rearrange the columns of the dataframes
abs_goals <- overall_goals[ , c(1,2,7,3,5,8,4,6)]
head(abs_goals)
abs_goals <- abs_goals[ , c(1,2,7,3,5,8,4,6)]
head(abs_goals)
source("code/dataframes/average_goals.R")
average_goals <- average_goals(abs_goals)
avg_goals <- average_goals(abs_goals)
source("code/dataframes/average_goals.R")
avg_goals <- average_goals(abs_goals)
head(abs_goals)
head(avg_goals)
# season
team_list <- list(
"2005-06" = droplevels(filter(abs_goals, Season == "2005-06")$Team[1:20]),
"2006-07" = droplevels(filter(abs_goals, Season == "2006-07")$Team[1:20]),
"2007-08" = droplevels(filter(abs_goals, Season == "2007-08")$Team[1:20]),
"2008-09" = droplevels(filter(abs_goals, Season == "2008-09")$Team[1:20]),
"2009-10" = droplevels(filter(abs_goals, Season == "2009-10")$Team[1:20]),
"2010-11" = droplevels(filter(abs_goals, Season == "2010-11")$Team[1:20]),
"2011-12" = droplevels(filter(abs_goals, Season == "2011-12")$Team[1:20]),
"2012-13" = droplevels(filter(abs_goals, Season == "2012-13")$Team[1:20]),
"2013-14" = droplevels(filter(abs_goals, Season == "2013-14")$Team[1:20]),
"2014-15" = droplevels(filter(abs_goals, Season == "2014-15")$Team[1:20]),
"2015-16" = droplevels(filter(abs_goals, Season == "2015-16")$Team[1:20]),
"2015-16" = droplevels(filter(abs_goals, Season == "2016-17")$Team[1:20]),
"2017-18" = droplevels(filter(abs_goals, Season == "2017-18")$Team[1:20]),
"2018-19" = droplevels(filter(abs_goals, Season == "2018-19")$Team[1:20]),
"2019-20" = droplevels(filter(abs_goals, Season == "2019-20")$Team[1:20])
)
fixtures <- read.csv("data/fixtures-2021.csv")
fixtures <- transform(fixtures, Date = as.Date(Date, format = "%d/%m/%Y"))
## pre-process teams from 2020/2021 to match the format of the results data source
fixtures <- transform(fixtures, Home.Team = as.character(Home.Team), Away.Team = as.character(Away.Team))
fixtures$Home.Team[fixtures$Home.Team == "Man Utd"] <- "Man United"
fixtures$Home.Team[fixtures$Home.Team == "Sheffield Utd"] <- "Sheffield United"
fixtures$Home.Team[fixtures$Home.Team == "Spurs"] <- "Tottenham"
fixtures$Away.Team[fixtures$Away.Team == "Man Utd"] <- "Man United"
fixtures$Away.Team[fixtures$Away.Team == "Sheffield Utd"] <- "Sheffield United"
fixtures$Away.Team[fixtures$Away.Team == "Spurs"] <- "Tottenham"
fixtures <- transform(fixtures, Home.Team = as.factor(Home.Team), Away.Team = as.factor(Away.Team))
# add 2020/2021 teams to the team_list
team_list$teams_2021 <- sort(unique(fixtures$Home.Team))
# split the result string into a home and away goal section
score <- as.character(fixtures$Result)
splt <- strsplit(score, " - ")
hg <- sapply(splt, function(x) x[1])
ag <- sapply(splt, function(x) x[2])
hg <- as.numeric(hg)
ag <- as.numeric(ag)
fixtures <- transform(fixtures, FTHG = hg, FTAG = ag)
rm(ag,hg,score,splt)
head(fixtures)
fixtures <- transform(fixtures, Season = as.factor(rep("2020-21", 380)))
head(fixtures)
sum_hg <- sum(fixtures$FTHG, na.rm = TRUE)
sum_ag <- sum(fixtures$FTAG, na.rm = TRUE)
teams <- team_list$teams_2021
team_list
team_list$"2020-21" <- sort(unique(fixtures$Home.Team))
team_list
abs_goals
head(abs_goals)
head(fixtures)
abs_goals_2021 <- overall_goals(HomeTeam = fixtures$Home.Team, AwayTeam = fixtures$Away.Team, Season = fixtures$Season, FTHG = fixtures$FTHG, fixtures$FTAG)
head(abs_goals_2021)
source("code/dataframes/overall_goals.R")
abs_goals_2021 <- overall_goals(HomeTeam = fixtures$Home.Team, AwayTeam = fixtures$Away.Team, Season = fixtures$Season, FTHG = fixtures$FTHG, fixtures$FTAG)
head(abs_goals_2021)
source("code/models/model1/goals_predict.R")
overall_goals_predict_2021 <- model1_overallGoals_predict(Teams = team_list$teams_2021)
source("code/models/model2/model2_score_predict.R")
homeGoalMatrix <- sapply(team_list$teams_2021,
function(HomeTeam) sapply(team_list$teams_2021,
function(AwayTeam) model2_score_predict(HomeTeam, AwayTeam, overall_goals_predict_2021)[[1]]))
awayGoalMatrix <- sapply(team_list$teams_2021,
function(AwayTeam) sapply(team_list$teams_2021,
function(HomeTeam) model2_score_predict(HomeTeam, AwayTeam, overall_goals_predict_2021)[[2]]))
expectedGoalMatrix <- rbind(homeGoalMatrix, awayGoalMatrix)
colnames(expectedGoalMatrix) <- team_list$teams_2021
scaledGoalMatrix <- scale(expectedGoalMatrix)
rownames(expectedGoalMatrix) <- c(sapply(team_list$teams_2021, function(x) paste0(x, "@Home")), sapply(team_list$teams_2021, function(x) paste0(x, "@Away")))
rownames(scaledGoalMatrix) <- c(sapply(team_list$teams_2021, function(x) paste0(x, "@Home")), sapply(team_list$teams_2021, function(x) paste0(x, "@Away")))
rm(homeGoalMatrix, awayGoalMatrix)
expectedGoalMatrix <- t(expectedGoalMatrix)
scaledGoalMatrix <- t(scaledGoalMatrix)
head(expectedGoalMatrix)
fixtures <- transform(fixtures, Home.Team = as.character(Home.Team), Away.Team = as.character(Away.Team))
# df1 contains the set of home teams for the season and predicted goals
df1 <- data.frame(Date = fixtures$Date, Week = fixtures$Round.Number, Team = fixtures$Home.Team, Opponent = paste0(fixtures$Away.Team, "@Home"))
df1 <- transform(df1, Team = as.character(Team), Opponent = as.character(Opponent))
EGHome <- rep(0, 380)
SHome <- rep(0, 380)
for (i in 1:380) {
EGHome[i] <- expectedGoalMatrix[[ df1[[i, 3]], df1[[i, 4]] ]]
SHome[i] <- scaledGoalMatrix[[ df1[[i, 3]], df1[[i, 4]] ]]
}
df1 <- transform(df1, expectedGoal = EGHome, scaledGoal = SHome)
# df2 contains the set of away teams and the expected goals for the season
df2 <- data.frame(Date = fixtures$Date, Week = fixtures$Round.Number, Team = fixtures$Away.Team, Opponent = paste0(fixtures$Home.Team, "@Away"))
df2 <- transform(df2, Team = as.character(Team), Opponent = as.character(Opponent))
EGAway <- rep(0, 380)
SAway <- rep(0, 380)
for (i in 1:380) {
EGAway[i] <- expectedGoalMatrix[[ df2[[i, 3]], df2[[i, 4]] ]]
SAway[i] <- scaledGoalMatrix[[ df2[[i, 3]], df2[[i, 4]] ]]
}
df2 <- transform(df2, expectedGoal = EGAway, scaledGoal = SAway)
goalDF <- rbind(df1, df2)
rm(df1, EGHome, SHome, df2, EGAway, SAway, i)
head(goalDF)
model2_score_predict()
fixtures
head(fixtures)
str(fixtures)
fixtures
head(fixtures)
ht <- fixtures$Home.Team
at <- fixtures$Away.Team
hg <- fixtures$FTHG
ag <- fixtures$FTAG
head(abs_goals)
teams <- sort(unique(abs_goals$Team))
head(teams)
# to predict the dataframe
source("code/models/model1/goals_predict.R")
overall_goals_predict_2021 <- model1_overallGoals_predict(Teams = team_list$teams_2021)
abs_goals_2021 <- model1_overallGoals_predict(Teams = team_list$teams_2021)
teams <- sort(unique(abs_goals_2021))
teams <- sort(unique(abs_goals_2021$Team))
head(teams)
head(abs_goals_2021)
TeamList <- as.factor(abs_goals_2021$Team)
TeamList
TeamList[["Arsenal"]]
TeamList["Arsenal"]
TeamList[1]
levels(TeamList)
labels(TeamList)
TeamList[3]
TeamList["Aston Villa"]
levels(TeamList)["Arsenal"]
class(levels(TeamList))
lvls <- levels(TeamList)
lbls <- labels(TeamList)
lvls
levels(TeamList) <- lbls
labels(TeamList) <- lvls
labels(TeamList)
labels(TeamList) <- lvls
TeamList
TeamList <- as.factor(abs_goals_2021$Team)
lvls
lbs
lbls
df <- data.frame(label = lbls, Team = lvls)
df
df$label[df$Team == "Liverpool"]
str(df)
class(lvls)
class(lbls)
names(lbls) <- lvls
lbls
as.numeric(lbls)
TeamList
lbls <- labels(TeamList)
lvls <- levels(TeamList)
lbls
names(lbls) <- lvls
lbls
lbls["Liverpool"]
as.numeric(lbls["Liverpool"])
TeamList[1]
head(abs_goals)
head(abs_goals_2021)
abs_goals_2021[Team == TeamList[1]]
filter(abs_goals_2021, Team == TeamList[1])
TeamList[1]
HomeGoal <- abs_goals_2021$home_goal
AwayGoal <- abs_goals_2021$away_goal
HomeConcede <- abs_goals_2021$home_concede
AwayConcede <- abs_goals_2021$away_concede
sum_hg <- sum(abs_goals_2021$home_goal)
sum_ag <- sum(abs_goals_2021$away_goal)
sum(hg)
sum_hg
sum_ag
exp.hg <- HomeGoal[[1]] * (AwayConcede[[2]] / (sum_hg - AwayConcede[[1]]))
exp.hg
source("code/models/model2/expected-score.R")
source("code/models/model2/expected-score.R")
head(abs_goals_2021)
abs_goals_2021
expected_score(HomeTeam = 5, AwayTeam = 1, HomeGoal = abs_goals_2021$home_goal, HomeConcede = abs_goals_2021$home_concede, AwayGoal = abs_goals_2021$away_goal, AwayConcede = abs_goals_2021$away_concede)
HomeTeam = "Liverpool"
class(HomeTeam)
TeamList
levels(TeamList)
lbls <- labels(TeamList)
lbls
names(lbls) <- levels(TeamList)
lblls
lbls
lbls[["Arsenal"]]
source("code/models/model2/expected-score.R")
expected_score(HomeTeam = "Chelsea", AwayTeam = "Arsenal", HomeGoal = abs_goals_2021$home_goal, HomeConcede = abs_goals_2021$home_concede, AwayGoal = abs_goals_2021$away_goal, AwayConcede = abs_goals_2021$away_concede)
expected_score(HomeTeam = "Chelsea", AwayTeam = "Arsenal", HomeGoal = abs_goals_2021$home_goal, HomeConcede = abs_goals_2021$home_concede, AwayGoal = abs_goals_2021$away_goal, AwayConcede = abs_goals_2021$away_concede, TeamList = TeamList)
expected_score(HomeTeam = 5, AwayTeam = 1, HomeGoal = abs_goals_2021$home_goal, HomeConcede = abs_goals_2021$home_concede, AwayGoal = abs_goals_2021$away_goal, AwayConcede = abs_goals_2021$away_concede)
expected_score(HomeTeam = 5, AwayTeam = 1, HomeGoal = abs_goals_2021$home_goal, HomeConcede = abs_goals_2021$home_concede, AwayGoal = abs_goals_2021$away_goal, AwayConcede = abs_goals_2021$away_concede, TeamList = TeamList)
expected_score(HomeTeam = "Chelsea", AwayTeam = "Arsenal", HomeGoal = abs_goals_2021$home_goal, HomeConcede = abs_goals_2021$home_concede, AwayGoal = abs_goals_2021$away_goal, AwayConcede = abs_goals_2021$away_concede, TeamList = TeamList)
head(fixtures)
str(fixtures)
df <- data.frame(HomeGoal = fixtures$FTHG, AwayGoal = fixtures$FTAG)
?apply
head(df)
fixtures <- transform(fixtures, Home.Team = as.factor(Home.Team))
ht <- fixtures$Home.Team
levels(ht)
ht
labels(ht)
levels(ht)
head(fixtures)
str(fixtures)
fixtures <- transform(fixtures, Home.Team = as.character(Home.Team))
df <- fixtures[,c(4,5,7,8)]
head(df)
df[,1]
df[1]
df[1,]
df[1,][[1]]
head(df)
df <- df[c(1,2),]
df
df <- fixtures[,c(4,5)]
head(df)
apply(df, 1, function(x){expected_score(HomeTeam = x[[1]], AwayTeam = x[[2]], HomeGoal = abs_goals_2021$home_goal, AwayGoal = abs_goals_2021$away_goal, HomeConcede = abs_goals_2021$home_concede, AwayConcede = abs_goals_2021$away_concede, TeamList = TeamList)})
exp.hg <- apply(df, 1, function(x){expected_score(HomeTeam = x[[1]], AwayTeam = x[[2]], HomeGoal = abs_goals_2021$home_goal, AwayGoal = abs_goals_2021$away_goal, HomeConcede = abs_goals_2021$home_concede, AwayConcede = abs_goals_2021$away_concede, TeamList = TeamList)})[1,]
exp.ag <- apply(df, 1, function(x){expected_score(HomeTeam = x[[1]], AwayTeam = x[[2]], HomeGoal = abs_goals_2021$home_goal, AwayGoal = abs_goals_2021$away_goal, HomeConcede = abs_goals_2021$home_concede, AwayConcede = abs_goals_2021$away_concede, TeamList = TeamList)})[2,]
head(exp.hg)
head(exp.ag)
head(fixtures)
fixtures <- transform(fixtures, exp.FTHG = exp.hg, exp.FTAG = exp.ag)
head(fixtures)
homeGoalMatrix <- sapply(team_list$teams_2021,
function(HomeTeam) sapply(team_list$teams_2021,
function(AwayTeam) model2_score_predict(HomeTeam, AwayTeam, overall_goals_predict_2021)[[1]]))
homeGoalMatrix
head(fixtures)
gamesplayed <- fixtures[C(1,2),]
gamesplayed <- fixtures[c(1,2),]
gamesplayed
gamesplayed <- fixtures[!(is.na(FTHG)),]
head(is.na(fixtures$FTHG))
head(!is.na(fixtures$FTHG))
gamesplayed <- fixtures[!is.na(fixtures$FTHG),]
gamesplayed
head(gamesplayed)
gamesplayed %>% group_by(Home.Team) %>% summarise(HG = sum(FTHG), exp.HG = sum(exp.FTHG))
gamesplayed %>% group_by(Away.Team) %>% summarise(AG = sum(FTAG), exp.AG = sum(exp.FTAG))
home_weight <- gamesplayed %>% group_by(Home.Team) %>% summarise(HG = sum(FTHG), exp.HG = sum(exp.FTHG))
away_weight <- gamesplayed %>% group_by(Away.Team) %>% summarise(AG = sum(FTAG), exp.AG = sum(exp.FTAG))
expected_score(HomeTeam = "Leicester", AwayTeam = "Man Utd", HomeGoal = hg, AwayGoal = ag, HomeConcede = hc, AwayConcede = ac, TeamList = TeamList)
TeamList
hg
hg <- abs_goals_2021$home_goal; ag <- abs_goals_2021$away_goal; hc <- abs_goals_2021$home_concede; ac <- abs_goals_2021$away_concede
expected_score(HomeTeam = "Leicester", AwayTeam = "Man Utd", HomeGoal = hg, AwayGoal = ag, HomeConcede = hc, AwayConcede = ac, TeamList = TeamList)
home_weight
head(fixtures)
select(fixtures, Home.Team == "Leicester" & Away.Team == "Man United")
expected_score(HomeTeam = "Leicester", AwayTeam = "Man Utd", HomeGoal = hg, AwayGoal = ag, HomeConcede = hc, AwayConcede = ac, TeamList = TeamList)
expected_score(HomeTeam = "Leicester", AwayTeam = "Man United", HomeGoal = hg, AwayGoal = ag, HomeConcede = hc, AwayConcede = ac, TeamList = TeamList)
home_weight <- transform(weight = HG/ exp.HG)
home_weight <- transform(home_weight, weight = HG / exp.HG)
home_weight
lm <- expected_score(HomeTeam = "Leicester", AwayTeam = "Man United", HomeGoal = hg, AwayGoal = ag, HomeConcede = hc, AwayConcede = ac, TeamList = TeamList)
away_weight <- transform(away_weight, weight = AG / exp.AG)
lm
lm[1] * home_weight$weight[10]
lm[2] * away_weight$weight[13]
ac <- expected_score(HomeTeam = "Arsenal", AwayTeam = "Chelsea", HomeGoal = hg, AwayGoal = ag, HomeConcede = hc, AwayConcede = ac, TeamList = TeamList)
ac
ac[1] * home_weight$weight[1]
ac[2] * away_weight$weight[5]
