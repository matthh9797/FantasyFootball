## MAKE THIS AN ACTUAL RESULT COLUMN
filter(season201819, HomeTeam == "Man United") %>% arrange(AwayTeam)
manutd1819
source("Scripts/actualResults.R")
predict("Wolves")
actualResults(Wolves)
source("Scripts/actualResults.R")
predict("Wolves")
actualResults(Wolves)
actualResults("Wolves")
predict("Huddersfield")
source("Scrpits/actualResults.R")
source("Scripts/actualResults.R")
predict("Huddersfield")
actualResults("Huddersfield")
source("Scripts/actualResults.R")
actualResults("Huddersfield")
source("Scripts/actualResults.R")
actualResults("Huddersfield")
source("Scripts/actualResults.R")
actualResults("Huddersfield")
predict("Huddersfield")
source("Scripts/actualResults.R")
predict("Huddersfield")
actualResults("Huddersfield")
predict("Tottenham")
actualResults("Tottenham")
homedata1617
homedata1718
homedata1819
predict("Crystal Palace")
actualResults("Crystal Palace")
## Script to read in data from datahub on English Premier League results
library("jsonlite")
json_file <- 'https://datahub.io/sports-data/english-premier-league/datapackage.json'
json_data <- fromJSON(paste(readLines(json_file), collapse=""))
# get list of all resources:
print(json_data$resources$name)
# data <- read.csv(url(path_to_file))
# load dplyr
library(dplyr)
# season 2018/2019
path_to_file <- json_data$resources$path[23]
data <- read.csv(url(path_to_file))
season201819 <- select(data, 2:10)
teams1819 <- sort(unique(data$HomeTeam))
# season 2017/2018
path_to_file <- json_data$resources$path[24]
data <- read.csv(url(path_to_file))
season1718 <- select(data, 2:10)
teams1718 <- unique(data$HomeTeam)
# season 2016/2017
path_to_file <- json_data$resources$path[25]
data <- read.csv(url(path_to_file))
season1617 <- select(data, 2:10)
teams1617 <- unique(data$HomeTeam)
# home and away dataframes 2018/2019
homedata1819 <- group_by(season201819, HomeTeam) %>% summarise(GoalScored=sum(FTHG), GoalAgainst=sum(FTAG))
awaydata1819 <- group_by(season201819, AwayTeam) %>% summarise(GoalScored=sum(FTAG), GoalAgainst=sum(FTHG))
homedata1819 <- mutate(homedata1819, GoalperGame = GoalScored / 19, ConcedeperGame = GoalAgainst / 19)
awaydata1819 <- mutate(awaydata1819, GoalperGame = GoalScored / 19, ConcedeperGame = GoalAgainst / 19)
totalGoal1819 <- c(HomeGoals = sum(homedata1819$GoalScored), AwayGoals = sum(homedata1819$GoalAgainst))
# home and away dataframes 2017/2018
homedata1718 <- group_by(season1718, HomeTeam) %>% summarise(GoalScored=sum(FTHG), GoalAgainst=sum(FTAG))
awaydata1718 <- group_by(season1718, AwayTeam) %>% summarise(GoalScored=sum(FTAG), GoalAgainst=sum(FTHG))
homedata1718 <- mutate(homedata1718, GoalperGame = GoalScored / 19, ConcedeperGame = GoalAgainst / 19)
awaydata1718 <- mutate(awaydata1718, GoalperGame = GoalScored / 19, ConcedeperGame = GoalAgainst / 19)
totalGoal1718 <- c(HomeGoals = sum(homedata1718$GoalScored), AwayGoals = sum(homedata1718$GoalAgainst))
# home and away dataframes 2016/2017
homedata1617 <- group_by(season1617, HomeTeam) %>% summarise(GoalScored=sum(FTHG), GoalAgainst=sum(FTAG))
awaydata1617 <- group_by(season1617, AwayTeam) %>% summarise(GoalScored=sum(FTAG), GoalAgainst=sum(FTHG))
homedata1617 <- mutate(homedata1617, GoalperGame = GoalScored / 19, ConcedeperGame = GoalAgainst / 19)
awaydata1617 <- mutate(awaydata1617, GoalperGame = GoalScored / 19, ConcedeperGame = GoalAgainst / 19)
totalGoal1617 <- c(HomeGoals = sum(homedata1617$GoalScored), AwayGoals = sum(homedata1617$GoalAgainst))
# use functions predict and actualResults to look at the effectiveness of the model
source("Scripts/predict.R")
source("Scripts/actualResults.R")
# inspect liverpool
predict("Liverpool")
actualResults("Liverpool")
homedata1819
arsenal1819 <- homedata1819[1,]
arsenal1718 <- homedata1718[1,]
arsenal1617 <- homedata1617[1,]
arsenal1617
plot(c(arsenal1617$GoalScored, arsenal1718$GoalScored, arsenal1819$GoalScored), col = "red")
plot(c(arsenal1617$GoalScored, arsenal1718$GoalScored, arsenal1819$GoalScored), c("2016/2017", "2017/2018", "2018/2019") col = "red")
plot(c(arsenal1617$GoalScored, arsenal1718$GoalScored, arsenal1819$GoalScored), c("2016/2017", "2017/2018", "2018/2019"),  col = "red")
plot(c("2016/2017", "2017/2018", "2018/2019"),  c(arsenal1617$GoalScored, arsenal1718$GoalScored, arsenal1819$GoalScored), col = "red")
barplot(c("2016/2017", "2017/2018", "2018/2019"),  c(arsenal1617$GoalScored, arsenal1718$GoalScored, arsenal1819$GoalScored), col = "red")
plot(c(arsenal1617$GoalScored, arsenal1718$GoalScored, arsenal1819$GoalScored), col = "red")
plot(c(2017, 2018, 2019), c(arsenal1617$GoalScored, arsenal1718$GoalScored, arsenal1819$GoalScored), col = "red")
plot(c(2017, 2018, 2019), c(arsenal1617$GoalScored, arsenal1718$GoalScored, arsenal1819$GoalScored), col = "red", ylim = c(20, 60))
source("./data/plotGoalTrend.R")
source("./Scripts/plotGoalTrend.R")
source("./Scripts/plotGoalTrend.R")
plotGoalTrend("Liverpool")
subset(homedata1617, HomeTeam = "Liverpool")$GoalScored
homedata1617
subset(homedata1617, HomeTeam == "Liverpool")$GoalScored
source("./Scripts/plotGoalTrend.R")
plotGoalTrend("Liverpool")
source("./Scripts/plotGoalTrend.R")
plotGoalTrend("Liverpool")
source("./Scripts/plotGoalTrend.R")
plotGoalTrend("Liverpool")
source("./Scripts/plotGoalTrend.R")
plotGoalTrend("Liverpool")
plotGoalTrend("Tottenham")
source("./Scripts/plotGoalTrend.R")
plotGoalTrend("Tottenham")
plotGoalTrend("Man City")
plotGoalTrend("West Ham")
source("./Scripts/plotGoalTrend.R")
plotGoalTrend("Liverpool")
source("./Scripts/plotGoalTrend.R")
plotGoalTrend("Liverpool")
source("./Scripts/plotGoalTrend.R")
plotGoalTrend("Liverpool")
source("./Scripts/plotGoalTrend.R")
plotGoalTrend("Liverpool")
source("./Scripts/plotGoalTrend.R")
plotGoalTrend("Liverpool")
source("./Scripts/plotGoalTrend.R")
plotGoalTrend("Liverpool")
awaydata1819
plotGoalTrend("Tottenham")
plotGoalTrend("Man City")
season1718
subset(season201819, HomeTeam == "Liverpool" | AwayTeam == "Liverpool")
cut(subset(season201819, HomeTeam == "Liverpool" | AwayTeam == "Liverpool"), c(1, 10, 19, 29, 39))
?cut
liverpoolFixtures201819 <- subset(season201819, HomeTeam == "Liverpool" | AwayTeam == "Liverpool")
livfix1819 <- liverpoolFixtures201819
q1 <- livfix1819[1,10]
q2 <- livfix1819[11, 20]
q3 <- livfix1819[21, 29]
q4 <- livfix1819[30, 38]
library(dplyr)
sum(subset(q1, HomeTeam == "Liverpool")$HomeTeam)
sum(subset(q1, HomeTeam == "Liverpool")$FTHG)
q1
q1 <- livfix1819[1:10,]
q1
q2 <- livfix1819[11:20,]
q3 <- livfix1819[21:29,]
q4 <- livfix1819[30:38,]
sum(subset(q1, HomeTeam == "Liverpool")$FTHG)
sum(subset(q1, HomeTeam == "Liverpool")$FTHG, subset(q1, AwayTeam == "Liverpool")$FTAG)
sum(subset(q2, HomeTeam == "Liverpool")$FTHG, subset(q2, AwayTeam == "Liverpool")$FTAG)
sum(subset(q3, HomeTeam == "Liverpool")$FTHG, subset(q3, AwayTeam == "Liverpool")$FTAG)
sum(subset(q4, HomeTeam == "Liverpool")$FTHG, subset(q4, AwayTeam == "Liverpool")$FTAG)
sum(subset(q1, AwayTeam == "Liverpool")$FTAG)
sum(subset(q1, HomeTeam == "Liverpool")$FTHG)
q1
sum(subset(q1, HomeTeam == "Liverpool")$FTHG, subset(q1, AwayTeam == "Liverpool")$FTAG)
sum(subset(q2, HomeTeam == "Liverpool")$FTHG, subset(q2, AwayTeam == "Liverpool")$FTAG)
sum(subset(q3, HomeTeam == "Liverpool")$FTHG, subset(q3, AwayTeam == "Liverpool")$FTAG)
sum(subset(q4, HomeTeam == "Liverpool")$FTHG, subset(q4, AwayTeam == "Liverpool")$FTAG)
q3
## Script to read in data from datahub on English Premier League results
library("jsonlite")
json_file <- 'https://datahub.io/sports-data/english-premier-league/datapackage.json'
json_data <- fromJSON(paste(readLines(json_file), collapse=""))
# get list of all resources:
print(json_data$resources$name)
library(dplyr)
source("Scripts/extractSeason.R")
library(dplyr)
source("Scripts/extractSeason.R")
library(dplyr)
source("Scripts/extractSeason.R")
season_1819 <- extractSeason(23)
extractSeason
season_1819 <- extractSeason(23)
library(dplyr)
source("Scripts/extractSeason.R")
season_1819 <- extractSeason(23)
extractSeason()
extractSeason
path_to_file <- json_data$resources$path[23]
data <- read.csv(url(path_to_file))
season201819 <- select(data, 2:10)
teams1819 <- sort(unique(data$HomeTeam))
library(dplyr)
source("Scripts/extractSeason.R")
extractSeason
extractSeason(23)
library(dplyr)
source("Scripts/extractSeason.R")
extractSeason(23)
library(dplyr)
source("Scripts/extractSeason.R")
extractSeason(23)
season_1819 <- extractSeason(23)
teams_1819 <- sort(unique(season_1819$HomeTeam))
teams_1819
list("Matthew", "Hendo") <- list(c(1,2,3), c(4,5,6))
"Matthew" "Hendo" <- c(1,2,3), c(4,5,6)
list <- list(c(1,2,3), c(4,5,6))
list2 <- list("Matthew" "Hendo")
list2 <- list("Matthew", "Hendo")
lapply(list, function(x) {names(x) <- list2})
lapply(list, function(x) {names(x) <- list2; x})
# season 2017/2018
season_1718 <- extractSeason(24)
teams_1718 <- sort(unique(season_1718$HomeTeam))
teams_1718
# season 2016/2017
season_1617 <- extractSeason(25)
teams_1617 <- sort(unique(season_1617$HomeTeam))
# season 2015/2016
season_1516 <- extractSeason(26)
teams_1516 <- sort(unique(season_1516$HomeTeam))
?dump
dump("season_1819", file = "test.R")
years <- c("0910", "1011", "1112", "1213", "1314", "1415", "1516", "1617", "1718", "1819")
season_list <- sapply(years, function(x) {paste0("season_", x)})
team_list <- sapply(years, function(x) {paste0("team_", x)})
season_list
team_list
# season 2014/2015
season_1415 <- extractSeason(27)
teams_1415 <- sort(unique(season_1415$HomeTeam))
# season 2013/2014
season_1314 <- extractSeason(28)
teams_1314 <- sort(unique(season_1314$HomeTeam))
# season 2012/2013
season_1213 <- extractSeason(29)
teams_1213 <- sort(unique(season_1213$HomeTeam))
# season 2011/2012
season_1112 <- extractSeason(30)
teams_1112 <- sort(unique(season_1112$HomeTeam))
# season 2010/2011
season_1011 <- extractSeason(31)
teams_1011 <- sort(unique(season_1011$HomeTeam))
# season 2009/2010
season_0910 <- extractSeason(32)
teams_0910 <- sort(unique(season_0910$HomeTeam))
head(season_1819)
head(season_1415)
head(season_0910)
allSeason <- rbind(season_list)
season_list
allSeason <- rbind(season_1819, season_1718, season_1617, season_1516, season_1415, season_1314, season_1213, season_1112, season_1011, season_0910)
head(season_1415)
table(allSeason$FTHG)
table(allSeason$FTAG)
allGoal <- rbind(allSeason$FTHG, allSeason$FTAG)
table(allGoal)
hist(allGoals)
hist(allGoal)
hist(allGoal, breaks = 9)
hist(allGoal)
hist(allSeason$FTHG)
lines(table(allSeason$FTHG))
points(allSeason$FTHG)
points(table(allSeason$FTHG))
hist(allGoal, type = "n")
plot(table(allGoal))
plot(table(allGoal), type = "n")
points(table(allGoal))
par(mfrow = c(1, 3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
# dump season data frames
dump(list = list(season_1819, season_1718, season_1617, season_1516, season_1415,
season_1314, season_1213, season_1112, season_1011, season_0910),
"seasondata.R")
?dump
# dump season data frames
dump(list = season_list,
file = "seasondata.R")
source("seasondata.R")
## insight into the distribution of goals scored in the premier league
allSeason <- rbind(season_1819, season_1718, season_1617, season_1516, season_1415,
season_1314, season_1213, season_1112, season_1011, season_0910)
allGoal <- rbind(allSeason$FTHG, allSeason$FTAG)
par(mfrow = c(1, 3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
hist(allSeason$FTHG, col = "blue", xlab = "Home Goals", main = "Home Goals from 2009 to 2020")
hist(allSeason$FTAG, col = "blue", xlab = "Away Goals", main = "Away Goals from 2009 to 2020", xlim = c(0, max(allSeason$FTHG)))
hist(allGoal, col = "blue", xlab = "Total Goals", main = "Total Goals from 2009 to 2020")
# table of histograms of distributions
par(mfrow = c(1, 3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
hist(allSeason$FTHG, col = "blue", xlab = "Home Goals", main = "Home Goals from 2009 to 2020")
hist(allSeason$FTAG, col = "blue", xlab = "Away Goals", main = "Away Goals from 2009 to 2020", xlim = c(0, 1200))
hist(allGoal, col = "blue", xlab = "Total Goals", main = "Total Goals from 2009 to 2020")
# table of histograms of distributions
par(mfrow = c(1, 3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
hist(allSeason$FTHG, col = "blue", xlab = "Home Goals", main = "Home Goals from 2009 to 2020")
hist(allSeason$FTAG, col = "blue", xlab = "Away Goals", main = "Away Goals from 2009 to 2020", xlim = c(0, 1200))
hist(allGoal, col = "blue", xlab = "Total Goals", main = "Total Goals from 2009 to 2020")
par(mfrow = c(1, 3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
hist(allSeason$FTHG, col = "blue", xlab = "Home Goals", main = "Home Goals from 2009 to 2020")
hist(allSeason$FTAG, col = "blue", xlab = "Away Goals", main = "Away Goals from 2009 to 2020", ylim = c(0, 1200))
hist(allGoal, col = "blue", xlab = "Total Goals", main = "Total Goals from 2009 to 2020")
# table of histograms of distributions
par(mfrow = c(1, 3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
hist(allSeason$FTHG, col = "blue", xlab = "Home Goals", main = "Home Goals from 2009 to 2020")
hist(allSeason$FTAG, col = "blue", xlab = "Away Goals", main = "Away Goals from 2009 to 2020")
hist(allGoal, col = "blue", xlab = "Total Goals", main = "Total Goals from 2009 to 2020")
mtext("Distribution of Goals Scored in the Premier League")
# table of histograms of distributions
par(mfrow = c(1, 3), mar = c(4, 4, 3, 1))
hist(allSeason$FTHG, col = "blue", xlab = "Home Goals", main = "Home Goals from 2009 to 2020")
hist(allSeason$FTAG, col = "blue", xlab = "Away Goals", main = "Away Goals from 2009 to 2020")
hist(allGoal, col = "green", xlab = "Total Goals", main = "Total Goals from 2009 to 2020")
mtext("Distribution of Goals Scored in the Premier League")
?mtext
# table of histograms of distributions
par(mfrow = c(1, 3), mar = c(4, 4, 2, 1), oma = c(0,0,2,0))
hist(allSeason$FTHG, col = "blue", xlab = "Home Goals", main = "Home Goals from 2009 to 2020")
hist(allSeason$FTAG, col = "blue", xlab = "Away Goals", main = "Away Goals from 2009 to 2020")
hist(allGoal, col = "green", xlab = "Total Goals", main = "Total Goals from 2009 to 2020")
mtext("Distribution of Goals Scored in the Premier League", outer = TRUE)
table(allSeason$FTHG)
table(allSeason$FTAG)
table(allGoal)
table(allGoal)
table(allSeason$HomeTeam)
table(allSeason$FTHG)
table(allSeason$FTAG)
table(allSeason$FTAG)
table(allSeason$FTHG)
table(allSeason$FTAG)
table(allGoal)
source("code/extractSeason.R")
source("seasondata.R")
years <- c("0910", "1011", "1112", "1213", "1314", "1415", "1516", "1617", "1718", "1819")
season_vector <- sapply(years, function(x) {paste0("season_", x)})
team_vector <- sapply(years, function(x) {paste0("team_", x)})
allSeason <- rbind(season_1819, season_1718, season_1617, season_1516, season_1415,
season_1314, season_1213, season_1112, season_1011, season_0910)
table(allSeason$FTHG)
table(allSeason$FTAG)
allGoal <- rbind(allSeason$FTHG, allSeason$FTAG)
table(allGoal)
library(dplyr)
table(filter(allSeason$FTHG, HomeTeam == "Liverpool"))
table(subset(allSeason, HomeTeam == "Liverpool")$FTHG)
names(allSeason)
source("code/distTeam.R")
liv <- distTeam("Liverpool")
liv[[1]]
liv[[2]]
source("code/distTeam.R")
liv <- distTeam("Liverpool")
manU <- distTeam("Man United")
manU[[1]]
manU[[3]]
liv[[3]]
liv <- distTeam("Liverpool", season = season_1819)
source("code/distTeam.R")
liv <- distTeam("Liverpool", season = season_1819)
liv[[3]]
source("code/distTeam.R")
liv <- distTeam("Liverpool", season = season_1819)
liv[[3]]
distTeam("Bournmouth")
distTeam("Bournemouth")
distTeam("Everton")
26*7.5
26*1.5*2.5
*5
26*7.5*26*1.5*2.5*5
(26*7.5)+(26*1.5*2.5)*5
((26*7.5)+(26*1.5*2.5))*5
((26*7.5)+(26*1.5*2.5))*5*0.85
pay <- function(rate, time, overtime = 0, doubletime = 0, days = 1, weeks = 1) {
perday <- ((rate*hours) + (1.5*rate*overtime) + (2*rate * doubletime))
perday*days*weeks
}
pay(rate = 26, time = 7.5, overtime = 4.5, days = 5, weeks = 4)
pay <- function(rate, time, overtime = 0, doubletime = 0, days = 1, weeks = 1) {
perday <- ((rate*hours) + (1.5*rate*overtime) + (2*rate * doubletime))
perday*days*weeks
}
pay
pay <- function(rate, time, overtime = 0, doubletime = 0, days = 1, weeks = 1) {
perday <- ((rate*hours) + (1.5*rate*overtime) + (2*rate * doubletime))
perday*days*weeks
}
pay(rate = 26, time = 7.5, overtime = 4.5, days = 5, weeks = 4)
pay <- function(rate, time, overtime = 0, doubletime = 0, days = 1, weeks = 1) {
perday <- ((rate*time) + (1.5*rate*overtime) + (2*rate * doubletime))
perday*days*weeks
}
pay(rate = 26, time = 7.6, overtime = 4.4, days = 5, weeks = 4)
pay <- function(rate, time, overtime = 0, doubletime = 0, days = 1, weeks = 1, tax = 0.15) {
perday <- ((rate*time) + (1.5*rate*overtime) + (2*rate * doubletime))
(1 - tax)*perday*days*weeks
}
pay(rate = 26, time = 7.6, overtime = 4.4, days = 5, weeks = 4)
pay <- function(rate, time, overtime = 0, doubletime = 0, days = 1, weeks = 1, tax = 0.15, currency = "£") {
perday <- ((rate*time) + (1.5*rate*overtime) + (2*rate * doubletime))
pay <- (1 - tax)*perday*days*weeks
paste0(currency, pay)
}
pay(rate = 26, time = 7.6, overtime = 4.4, days = 5, weeks = 4)
pay <- function(rate, time, overtime = 0, doubletime = 0, days = 1, weeks = 1, tax = 0.15, currency = "£") {
perday <- ((rate*time) + (1.5*rate*overtime) + (2*rate * doubletime))
options(digits = 2)
pay <- (1 - tax)*perday*days*weeks
paste0(currency, pay)
}
pay(rate = 26, time = 7.6, overtime = 4.4, days = 5, weeks = 4)
?options
?print
pay <- function(rate, time, overtime = 0, doubletime = 0, days = 1, weeks = 1, tax = 0.15, currency = "£") {
perday <- ((rate*time) + (1.5*rate*overtime) + (2*rate * doubletime))
options(digits = 3)
pay <- (1 - tax)*perday*days*weeks
paste0(currency, pay)
}
pay(rate = 26, time = 7.6, overtime = 4.4, days = 5, weeks = 4)
options(digits = 3)
pay(rate = 26, time = 7.6, overtime = 4.4, days = 5, weeks = 4)
pay(26, 8)
pay <- function(rate, time, overtime = 0, doubletime = 0, days = 1, weeks = 1, tax = 0.15, currency = "£") {
perday <- ((rate*time) + (1.5*rate*overtime) + (2*rate * doubletime))
pay <- (1 - tax)*perday*days*weeks
paste0(currency, pay, "0")
}
pay(26, 12, currency = "$")
pay(rate = 26, time = 7.6, overtime = 4.4, days = 5)
pay(rate = 26, time = 7.6, overtime = 4.4, days = 5, currency = "$")
pay <- function(rate, time, overtime = 0, doubletime = 0, days = 1, weeks = 1, tax = 0.15, currency = "£", breaks = 0) {
perday <- ((rate*time) + (1.5*rate*overtime) + (2*rate * doubletime) - breaks)
pay <- (1 - tax)*perday*days*weeks
paste0(currency, pay, "0")
}
7.6*5
pay <- function(rate, time, overtime = 0, doubletime = 0, days = 1, weeks = 1, tax = 0.15, currency = "£", breaks = 0) {
perday <- ((rate*time) + (1.5*rate*overtime) + (2*rate * doubletime) - (rate*breaks))
pay <- (1 - tax)*perday*days*weeks
paste0(currency, pay, "0")
}
pay
# pay over 4 weeks
pay(rate = 26, time = 7.6, overtime = 4.4, days = 5, weeks = 4, tax = 0.15, currency="$", breaks = 0.5)
# pay per week
pay(rate = 26, time = 7.6, overtime = 4.4, days = 5, tax = 0.15, currency="$", breaks = 0.5)
# pay per day
pay(rate = 26, time = 7.6, overtime = 4.4, tax = 0.15, currency="$", breaks = 0.5)
# Pay on a Saturday
pay(rate = 26, time = 0, overtime = 3, doubletime = 9, currency="$", breaks = 0.5)
# Pay if worked saturdays once per week
pay(rate = 26, time = 7.6, overtime = 4.4, days = 4, weeks = 4, tax = 0.15, currency="$", breaks = 0.5) + pay(rate = 26, time = 0, overtime = 3, doubletime = 9, days = 1, weeks = 4, currency="$", breaks = 0.5)
pay(rate = 26, time = 7.6, overtime = 4.4, days = 4, weeks = 4, tax = 0.15, currency="$", breaks = 0.5)
pay(rate = 26, time = 0, overtime = 3, doubletime = 9, days = 1, weeks = 4, currency="$", breaks = 0.5)
weekday <- pay(rate = 26, time = 7.6, overtime = 4.4, days = 4, weeks = 4, tax = 0.15, currency="$", breaks = 0.5)
weekend <- pay(rate = 26, time = 0, overtime = 3, doubletime = 9, days = 1, weeks = 4, currency="$", breaks = 0.5)
pay(rate = 26, time = 7.6, overtime = 4.4, days = 4, weeks = 4, tax = 0.15, currency="$", breaks = 0.5)
source("seasondata.R")
years <- c("0910", "1011", "1112", "1213", "1314", "1415", "1516", "1617", "1718", "1819")
season_vector <- sapply(years, function(x) {paste0("season_", x)})
team_vector <- sapply(years, function(x) {paste0("team_", x)})
allSeason <- rbind(season_1819, season_1718, season_1617, season_1516, season_1415,
season_1314, season_1213, season_1112, season_1011, season_0910)
table(allSeason$FTHG)
table(allSeason$FTAG)
allGoal <- rbind(allSeason$FTHG, allSeason$FTAG)
table(allGoal)
# Plot histograms
par(mfrow = c(1, 3), mar = c(4, 4, 2, 1), oma = c(0,0,2,0))
hist(allSeason$FTHG, col = "blue", xlab = "Home Goals", main = "Home Goals from 2009 to 2020")
hist(allSeason$FTAG, col = "blue", xlab = "Away Goals", main = "Away Goals from 2009 to 2020")
hist(allGoal, col = "green", xlab = "Total Goals", main = "Total Goals from 2009 to 2020")
mtext("Distribution of Goals Scored in the Premier League", outer = TRUE)
source("code/distTeam.R")
# home and away dataframes 2018/2019
homedata1819 <- group_by(season201819, HomeTeam) %>% summarise(GoalScored=sum(FTHG), GoalAgainst=sum(FTAG))
awaydata1819 <- group_by(season201819, AwayTeam) %>% summarise(GoalScored=sum(FTAG), GoalAgainst=sum(FTHG))
homedata1819 <- mutate(homedata1819, GoalperGame = GoalScored / 19, ConcedeperGame = GoalAgainst / 19)
awaydata1819 <- mutate(awaydata1819, GoalperGame = GoalScored / 19, ConcedeperGame = GoalAgainst / 19)
totalGoal1819 <- c(HomeGoals = sum(homedata1819$GoalScored), AwayGoals = sum(homedata1819$GoalAgainst))
library(dplyr)
# home and away dataframes 2018/2019
homedata1819 <- group_by(season201819, HomeTeam) %>% summarise(GoalScored=sum(FTHG), GoalAgainst=sum(FTAG))
awaydata1819 <- group_by(season201819, AwayTeam) %>% summarise(GoalScored=sum(FTAG), GoalAgainst=sum(FTHG))
homedata1819 <- mutate(homedata1819, GoalperGame = GoalScored / 19, ConcedeperGame = GoalAgainst / 19)
awaydata1819 <- mutate(awaydata1819, GoalperGame = GoalScored / 19, ConcedeperGame = GoalAgainst / 19)
totalGoal1819 <- c(HomeGoals = sum(homedata1819$GoalScored), AwayGoals = sum(homedata1819$GoalAgainst))
# home and away dataframes 2018/2019
homedata1819 <- group_by(season_1819, HomeTeam) %>% summarise(GoalScored=sum(FTHG), GoalAgainst=sum(FTAG))
awaydata1819 <- group_by(season_1819, AwayTeam) %>% summarise(GoalScored=sum(FTAG), GoalAgainst=sum(FTHG))
homedata1819 <- mutate(homedata1819, GoalperGame = GoalScored / 19, ConcedeperGame = GoalAgainst / 19)
awaydata1819 <- mutate(awaydata1819, GoalperGame = GoalScored / 19, ConcedeperGame = GoalAgainst / 19)
totalGoal1819 <- c(HomeGoals = sum(homedata1819$GoalScored), AwayGoals = sum(homedata1819$GoalAgainst))
homedata1819
homedata_1819 <- group_by(season_1819, HomeTeam) %>% summarise(GoalScored=sum(FTHG), GoalAgainst=sum(FTAG))
awaydata_1819 <- group_by(season_1819, AwayTeam) %>% summarise(GoalScored=sum(FTAG), GoalAgainst=sum(FTHG))
homedata_1819 <- mutate(homedata_1819, GoalperGame = GoalScored / 19, ConcedeperGame = GoalAgainst / 19)
awaydata_1819 <- mutate(awaydata_1819, GoalperGame = GoalScored / 19, ConcedeperGame = GoalAgainst / 19)
totalGoal_1819 <- c(HomeGoals = sum(homedata_1819$GoalScored), AwayGoals = sum(homedata_1819$GoalAgainst))
source("Scripts/predict.R")
source("Scripts/actualResults.R")
predict()
predict
predict("Liverpool")
source("Scripts/predict.R")
predict("Liverpool")
source("Scripts/predict.R")
predict("Liverpool")
source("code/predict.R")
predict("Liverpool")
team_vector <- sapply(years, function(x) {paste0("team_", x)})
teams_1819 <- sort(unique(season_1819$HomeTeam))
teams_1718 <- sort(unique(season_1718$HomeTeam))
teams_1617 <- sort(unique(season_1617$HomeTeam))
predict("Liverpool")
head(season_1819)
head(homedata_1819)
intersect(teams_1819, intersect(teams_1718, teams_1617))
