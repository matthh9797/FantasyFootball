x <- sqrt(25)
x <- sqrt(25)
x
x <- sqrt(36)
x
help(sqrt)
?abs
?plot
plot(sin, -pi, 2*pi) # see ?plot.function
plot(table(rpois(100, 5)), type = "h", col = "red", lwd = 10,
main = "rpois(100, lambda = 5)")
x <- seq(0, 1, 0.01)
y <- sin(x)
plot(x, y, type="l", main="sin plot", ylab="sin(x)",
)
x <- seq(0, 2*pi, 0.01)
y <- sin(x)
plot(x, y, type="l", main="sin plot", ylab="sin(x)",
)
?lines
?plot
x <- seq(0, 2*pi, 0.01)
y <- sin(x)
plot(x, y, type=
x <- seq(0, 2*pi, 0.01)
y <- sin(x)
plot(x, y, type="p", main="sin plot", ylab="sin(x)",
col="red")
ls()
rm(list=ls())
x <- seq(0, 2*pi, 0.01)
y <- sin(x)
plot(x, y, type="p", main="sin plot", ylab="sin(x)",
col="red")
rm(x)
x <- seq(0, 2*pi, 0.01)
rm(list=[x, y])
rm(list=(x, y))
rm(list=(x y))
x <- seq(0, 2*pi, 0.01)
y <- sin(x)
plot(x, y, type="p", main="sin plot", ylab="sin(x)",
col="red")
?iris
require("ggplot2")
installed.packages()
installed.packages()[1:5,]
require(devtools)
require("devtools")
library(ggplot2)
library("gh", lib.loc="~/R/win-library/3.5")
detach("package:gh", unload=TRUE)
old.packages()
install.packages(c("ggplot2", "iterators", "jsonlite"))
library("ggplot2", lib.loc="~/R/win-library/3.5")
detach("package:ggplot2", unload=TRUE)
version
sessionInfo()
help(package="ggplot2")
browseVignettes("ggplot2")
ls()
rm(list=c(x, y))
infohelp(package=devtools)
infohelp(package="devtools")
infohelp(package="devtools")
infohelp(package="ggplot2")
infohelp(package="ggplot2")
browseVignettes("ggplot2")
help(devtools)
library(devtools)
help(devtools)
install.packages("KernSmooth")
load(KernSmooth)
library(KernSmooth)
lsf.str("package:devtools")
install.packages("tinytex")
install.packages(c("backports", "glue"))
update.packages()
latexmk()
library(tinytex)
latexmk()
tinytex::tlmgr_update()
tinytex::install_tinytex()
tinytex:::is_tinytex()
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
knitr::opts_chunk$set(echo = TRUE)
print("Hello World!")
x <- factor(c("Arsenal", "Liverpool", "Man Utd"))
x
table(x)
unclass(x)
attr(x)
attr(x, "levels")
x
x <- factor(c("Arsenal", "Liverpool", "Man Utd"), )
x <- factor(c("Arsenal", "Liverpool", "Man Utd"), levels=c("Liverpool", "Arsenal", "Man Utd"))
x
unclass(x)
Y <- C(1, 2, Na, NaN, 5)
y <- c(1,2,Na,NaN)
y <- c(1,2,3,NA,NaN,6)
is.na(y)
is.nan(y)
X <- "HELLO"
y <- 22
dump(c(x,y), file="data.R")
dump(c("x", "y"), file="data.R")
rm(list=ls(all.names=TRUE))
source("data.R")
dput(y)
dput(X)
dput(x)
x <- ["a", "b", "c", "d", "d"]
x <- c("a", "b", "c", "c", "d")
x[1]
x[2]
x[2:4]
x[1:5:2]
x[1:2:5]
install.packages("swirl")
library(swirl)
rm(list=ls())
swirl()
5+7
x <- 5+7
x
y <- x - 3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 + 100
my_sqrt <- sqrt(z - 1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4) + c(0,10,100)
z * 2 + 1000
my_div
getwd()
ls()
x <- 9
ls()
dir()
?list.files
arg(list.files())
args(list.files)
old.dir <- getwd()
>
dir.create("testdir")
setwd(testdir)
setwd("testdir")
file.create("mytest.R")
dir()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
nxt()
file.path("mytest3.R")
file.path("folder1", "folder2")
?dir.create
dir.create(file.path("testdir2", "testdir3"))
dir.create(file.path('testdir2', 'testdir3'), recursive = TRUE)
setwd(old.dir)
getwd()
swirl()
1:20
pi:10
15:1
?`:`
seq(1, 20)
seq(0, 10, by=0.5)
my_seq <- seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along.with=my_seq)
seq_along(my_seq)
rep(0, times=40)
rep(c(0, 1, 2), times=10)
rep(c(0, 1, 2), each = 10)
swirl()
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Dragon")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
play()
paste(my_name, sep = " ")
paste(my_name)
paste(my_name, collapse = " ")
nxt()
paste(1:3, c("x", "y", "z"))
paste(1:3, c("x", "y", "z"), sep = "")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
rm(list=ls())
swirl()
library(swirl)
swirl()
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y,z), 100)
is.na(my_data)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
x[c(3, 5, 7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
c(11, 2, NA)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
play()
vect == vect2
nxt()
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20, 4, 5)
identical(my_matrix, my_matrix2)
play()
my_matrix == my_matrix2
nxt()
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
play()
attributes(data.frame)
attributes(data.frame())
nxt()
play()
?data.frame
nxt()
colnames(my_data) <- cnames
my_data
rm(list=ls())
setwd("C:/Users/MattH/data_science/Projects/FantasyFootball")
