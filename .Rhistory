abs_goals <- overall_goals(HomeTeam = results$HomeTeam, AwayTeam = results$AwayTeam,
Season = results$Season, FTHG = results$FTHG, FTAG = results$FTAG)
# c. average_goals is a function that inputs the overall goals dataframe and returns a dataframe containing the
# goals per game version of overall_goals with home:away ratios for goals scored and conceded
source("code/dataframes/average_goals.R")
avg_goals <- average_goals(abs_goals)
# season
team_list <- list(
"2005-06" = droplevels(filter(abs_goals, Season == "2005-06")$Team[1:20]),
"2006-07" = droplevels(filter(abs_goals, Season == "2006-07")$Team[1:20]),
"2007-08" = droplevels(filter(abs_goals, Season == "2007-08")$Team[1:20]),
"2008-09" = droplevels(filter(abs_goals, Season == "2008-09")$Team[1:20]),
"2009-10" = droplevels(filter(abs_goals, Season == "2009-10")$Team[1:20]),
"2010-11" = droplevels(filter(abs_goals, Season == "2010-11")$Team[1:20]),
"2011-12" = droplevels(filter(abs_goals, Season == "2011-12")$Team[1:20]),
"2012-13" = droplevels(filter(abs_goals, Season == "2012-13")$Team[1:20]),
"2013-14" = droplevels(filter(abs_goals, Season == "2013-14")$Team[1:20]),
"2014-15" = droplevels(filter(abs_goals, Season == "2014-15")$Team[1:20]),
"2015-16" = droplevels(filter(abs_goals, Season == "2015-16")$Team[1:20]),
"2015-16" = droplevels(filter(abs_goals, Season == "2016-17")$Team[1:20]),
"2017-18" = droplevels(filter(abs_goals, Season == "2017-18")$Team[1:20]),
"2018-19" = droplevels(filter(abs_goals, Season == "2018-19")$Team[1:20]),
"2019-20" = droplevels(filter(abs_goals, Season == "2019-20")$Team[1:20])
)
head(abs_goals)
liv_goals <- subset(abs_goals, Team == "Liverpool")
head(liv_goals)
# the 2019/2020 season
results <- read.csv("data/results1993-2020.csv")
# results 2005 - 2020 (15 seasons)
results <- transform(results, Date = as.Date(Date))
library(dplyr)
results <- filter(results, Date > "2005-08-01")
results$HomeTeam <- droplevels(results$HomeTeam)
results$AwayTeam <- droplevels(results$AwayTeam)
# save(results, file = "data/results.R")
# b. goalSummary is a dataframe containing a summary of the overall goals scored and conceded by each team
# in the Premier league by season
source("code/summaryGoals.R")
# b. overall_goals is a function that inputs a results dataframe and returns a dataframe containing the
# goals scored by each team in each season
source("code/dataframes/overall_goals.R")
abs_goals <- overall_goals(HomeTeam = results$HomeTeam, AwayTeam = results$AwayTeam,
Season = results$Season, FTHG = results$FTHG, FTAG = results$FTAG)
# c. average_goals is a function that inputs the overall goals dataframe and returns a dataframe containing the
# goals per game version of overall_goals with home:away ratios for goals scored and conceded
source("code/dataframes/average_goals.R")
avg_goals <- average_goals(abs_goals)
# d. tea
team_list <- list(
"2005-06" = droplevels(filter(abs_goals, Season == "2005-06")$Team[1:20]),
"2006-07" = droplevels(filter(abs_goals, Season == "2006-07")$Team[1:20]),
"2007-08" = droplevels(filter(abs_goals, Season == "2007-08")$Team[1:20]),
"2008-09" = droplevels(filter(abs_goals, Season == "2008-09")$Team[1:20]),
"2009-10" = droplevels(filter(abs_goals, Season == "2009-10")$Team[1:20]),
"2010-11" = droplevels(filter(abs_goals, Season == "2010-11")$Team[1:20]),
"2011-12" = droplevels(filter(abs_goals, Season == "2011-12")$Team[1:20]),
"2012-13" = droplevels(filter(abs_goals, Season == "2012-13")$Team[1:20]),
"2013-14" = droplevels(filter(abs_goals, Season == "2013-14")$Team[1:20]),
"2014-15" = droplevels(filter(abs_goals, Season == "2014-15")$Team[1:20]),
"2015-16" = droplevels(filter(abs_goals, Season == "2015-16")$Team[1:20]),
"2015-16" = droplevels(filter(abs_goals, Season == "2016-17")$Team[1:20]),
"2017-18" = droplevels(filter(abs_goals, Season == "2017-18")$Team[1:20]),
"2018-19" = droplevels(filter(abs_goals, Season == "2018-19")$Team[1:20]),
"2019-20" = droplevels(filter(abs_goals, Season == "2019-20")$Team[1:20])
)
fixtures <- read.csv("data/fixtures-2021.csv")
fixtures <- transform(fixtures, Date = as.Date(Date, format = "%d/%m/%Y"))
## pre-process teams from 2020/2021 to match the format of the results data source
fixtures <- transform(fixtures, Home.Team = as.character(Home.Team), Away.Team = as.character(Away.Team))
fixtures$Home.Team[fixtures$Home.Team == "Man Utd"] <- "Man United"
fixtures$Home.Team[fixtures$Home.Team == "Sheffield Utd"] <- "Sheffield United"
fixtures$Home.Team[fixtures$Home.Team == "Spurs"] <- "Tottenham"
fixtures$Away.Team[fixtures$Away.Team == "Man Utd"] <- "Man United"
fixtures$Away.Team[fixtures$Away.Team == "Sheffield Utd"] <- "Sheffield United"
fixtures$Away.Team[fixtures$Away.Team == "Spurs"] <- "Tottenham"
fixtures <- transform(fixtures, Home.Team = as.factor(Home.Team), Away.Team = as.factor(Away.Team))
# add 2020/2021 teams to the team_list
team_list$"2020-21" <- sort(unique(fixtures$Home.Team))
# split the result string into a home and away goal section
score <- as.character(fixtures$Result)
splt <- strsplit(score, " - ")
hg <- sapply(splt, function(x) x[1])
ag <- sapply(splt, function(x) x[2])
hg <- as.numeric(hg)
ag <- as.numeric(ag)
fixtures <- transform(fixtures, FTHG = hg, FTAG = ag, Season = as.factor(rep("2020-21", 380)))
# remove extra objects
rm(ag,hg,score,splt)
head(fixtures)
head(results)
head(abs_goals)
source("code/models/2-expected-score/expected-score.R")
library(dplyr)
result_exp <- select(results, Season, HomeTeam, AwayTeam, FTHG, FTAG)
head(result_exp)
season <- result_exp$Season
season <- droplevels(season)
result_exp_1920 <- filter(result_exp, Season == "2019-20")
head(result_exp_1920)
head(abs_goals)
abs_goals_1920 <- filter(abs_goals, Season == "2019-20")
head(abs_goals_1920)
hg <- abs_goals_1920$home_goal; ag <- abs_goals_1920$away_goal; hc <- abs_goals_1920$home_concede; abs_goals_1920$away_concede
hg <- abs_goals_1920$home_goal; ag <- abs_goals_1920$away_goal; hc <- abs_goals_1920$home_concede; ac <- abs_goals_1920$away_concede
result_exp_1920[,c(2,3)]
df <- result_exp_1920[,c(2,3)]
head(df)
exp.hg <- apply(df, 1, function(x){exp_score(HomeTeam = x[[1]], AwayTeam = x[[2]], HomeGoal = hg, AwayGoal = ag,
HomeConcede = hc, AwayConcede = ac, TeamList = TeamList)})[1,]
exp.ag <- apply(df, 1, function(x){exp_score(HomeTeam = x[[1]], AwayTeam = x[[2]], HomeGoal = hg, AwayGoal = ag,
HomeConcede = hc, AwayConcede = ac, TeamList = TeamList)})[2,]
teamList <- team_list$`2019-20`
exp.hg <- apply(df, 1, function(x){exp_score(HomeTeam = x[[1]], AwayTeam = x[[2]], HomeGoal = hg, AwayGoal = ag,
HomeConcede = hc, AwayConcede = ac, TeamList = TeamList)})[1,]
exp.ag <- apply(df, 1, function(x){exp_score(HomeTeam = x[[1]], AwayTeam = x[[2]], HomeGoal = hg, AwayGoal = ag,
HomeConcede = hc, AwayConcede = ac, TeamList = TeamList)})[2,]
exp.hg <- apply(df, 1, function(x){exp_score(HomeTeam = x[[1]], AwayTeam = x[[2]], HomeGoal = hg, AwayGoal = ag,
HomeConcede = hc, AwayConcede = ac, TeamList = teamList)})[1,]
exp.ag <- apply(df, 1, function(x){exp_score(HomeTeam = x[[1]], AwayTeam = x[[2]], HomeGoal = hg, AwayGoal = ag,
HomeConcede = hc, AwayConcede = ac, TeamList = teamList)})[2,]
head(exp.hg)
head(exp.ag)
head(result_exp_1920)
result_exp_1920 <- transform(result_exp_1920, exp.FTHG = exp.hg, exp.FTAG = exp.ag)
head(result_exp_1920)
source("code/models/2-expected-score/cost.R")
source("code/models/2-expected-score/cost.R")
source("code/models/2-expected-score/cost.R")
?length
source("code/models/2-expected-score/cost.R")
x <- c(result_exp_1920$FTHG, result_exp_1920$FTAG)
y <- c(result_exp_1920$exp.FTHG, result_exp_1920$exp.FTAG)
cost(x,y)
source("code/models/2-expected-score/cost-model2.R")
source("code/models/2-expected-score/cost_model2.R")
source("code/models/2-expected-score/cost_model2.R")
cost_model2(x,y)
liv <- filter(result_exp_1920, HomeTeam == "Liverpool" | AwayTeam == "Liverpool")
head(liv)
x <- c(liv$FTHG, liv$FTAG)
y <- c(liv$exp.FTHG, liv$FTAG)
csot(x,y)
cost_model2(x,y)
dist <- (FTHG / exp.FTHG) - 1
dist <- (x / y) - 1
head(dist)
hist(dist)
tot <- filter(result_exp_1920, HomeTeam == "Tottenham" | AwayTeam == "Tottenham")
x <- c(tot$FTHG, tot$FTAG)
y <- c(tot$exp.FTHG, tot$exp.FTAG)
cost_model2(x,y)
dist <- (x / y) - 1
hist(dist)
ars <- filter(result_exp_1920, HomeTeam == "Arsenal" | AwayTeam == "Arsenal")
x <- c(ars$FTHG, ars$FTAG)
y <- c(ars$exp.FTHG, ars$exp.FTAG)
cost_model2(x,y)
dist <- (x / y) - 1
hist(dist)
?hist
brks <- c(-1, -0.75, -0.5, -0.25, 0, 0.5, 1, 2, 3)
hist(dist, breaks = brks)
hist(dist)
cost_model2(x,y)
dist(x / y)
dist <- x / y
hist(dsit)
hist(dist)
## WEBSCRAPPING LIVERPOOL MANAGER LIST
library(rvest)
# url of the wikipedia manager table
url <- "https://en.wikipedia.org/wiki/List_of_Liverpool_F.C._managers#:~:text=Liverpool%20F.C.%20managers%20%20%20%20Name%20,%20%20288%20%2016%20more%20rows%20"
# create a connection with the url
webpage <- read_html(url)
# read html from the class wikitable
tbs <- html_nodes(webpage, ".wikitable")
# The manager table is the second table of this class
tb <- html_table(tbs[2], header = TRUE, fill = TRUE)
tb <- tb[[1]]
# tidy the names
nm1 <- names(tb)
nm2 <- as.character(tb[1,])
lg <- nm1 == nm2
nm1[!lg] <- paste(nm1[!lg], nm2[!lg], sep = ".")
tb <- tb[2:dim(tb)[1],]
names(tb) <- nm1
# subset out the date columns and convert to date type
from <- as.Date(tb$From, "%d %B %Y")
to <- as.Date(tb$To, "%d %B %Y")
man_tb <- data.frame(Team = "Liverpool", Manager = tb$Name, From = from, TO = to)
rm(tb, tbs, webpage, from, lg, nm1, nm2, to, url)
man_tb
## WEBSCRAPPING LIVERPOOL MANAGER LIST
library(rvest)
# url of the wikipedia manager table
url <- "https://en.wikipedia.org/wiki/List_of_Liverpool_F.C._managers#:~:text=Liverpool%20F.C.%20managers%20%20%20%20Name%20,%20%20288%20%2016%20more%20rows%20"
# create a connection with the url
webpage <- read_html(url)
# read html from the class wikitable
tbs <- html_nodes(webpage, ".wikitable")
# The manager table is the second table of this class
tb <- html_table(tbs[2], header = TRUE, fill = TRUE)
tb <- tb[[1]]
tb
man_tb
result <- read.csv("data/results1993-2020.csv")
result <- result[, c(1,3,4,5,6)]
result_0910 <- filter(results, Season == "2009-10")
source("code/dataframes/overall_goals.R")
abs_goal <- overall_goals(HomeTeam = result$HomeTeam, AwayTeam = result$AwayTeam,
Season = result$Season, FTHG = result$FTHG, FTAG = result$FTAG)
abs_goal_0910 <- filter(abs_goal, Season == "2009-10")
home <- arrange(result_0910, HomeTeam, AwayTeam)
home <- reshape(result_0910, idvar = "HomeTeam", v.names = "FTHG", timevar = "AwayTeam", direction = "wide")
nms <- as.character(home$HomeTeam)
home <- home[,2:21]
home <- home[,c(20,1:19)]
rownames(home) <- nms
colnames(home) <- nms
home[is.na(home)] <- 0
result <- read.csv("data/results1993-2020.csv")
head(result)
result <- result[, c(1,3,4,5,6)]
result_0910 <- filter(result, Season == "2009-10")
source("code/dataframes/overall_goals.R")
abs_goal <- overall_goals(HomeTeam = result$HomeTeam, AwayTeam = result$AwayTeam,
Season = result$Season, FTHG = result$FTHG, FTAG = result$FTAG)
abs_goal_0910 <- filter(abs_goal, Season == "2009-10")
head(result_0910)
head(abs_goal_0910)
home <- arrange(result_0910, HomeTeam, AwayTeam)
home <- reshape(result_0910, idvar = "HomeTeam", v.names = "FTHG", timevar = "AwayTeam", direction = "wide")
home
home <- arrange(result_0910, HomeTeam, AwayTeam)
head(home)
home <- reshape(result_0910, idvar = "HomeTeam", v.names = "FTHG", timevar = "AwayTeam", direction = "wide")
head(home)
home_arr <- arrange(result_0910, HomeTeam, AwayTeam)
head(home_arr)
home <- reshape(home_arr, idvar = "HomeTeam", v.names = "FTHG", timevar = "AwayTeam", direction = "wide")
home
nms <- as.character(sort(home$HomeTeam))
nms
home <- home[,2:21]
home <- home[,c(20,1:19)]
home
home <- reshape(home_arr, idvar = "HomeTeam", v.names = "FTHG", timevar = "AwayTeam", direction = "wide")
home
home <- home[,4:23]
head(home)
home <- home[,c(20,1:19)]
home
rownames(home) <- nms
colnames(home) <- nms
home[is.na(home)] <- 0
home
head(abs_goal_0910)
hg <- abs_goal_0910$home_goal
hg <- hg / 19
hg <- 1 / hg
hg
hg <- diag(hg)
hg
hg %*% home
hg %*% as.matrix(home)
distr <- hg %*% home
class(hg)
class(home)
home <- as.matrix(home)
distr <- hg %*% home
distr
?pheatmap
library(pheatmap)
?pheatmap
pheatmap(distr, cutree_cols = 6)
rownames(distr) <- nms
pheatmap(distr, cutree_cols = 6)
pheatmap(distr, cutree_rows = 6)
away_arr <- arrange(result_0910, AwayTeam, HomeTeam)
head(away_arr)
home_arr <- arrange(result_0910, HomeTeam, AwayTeam)
head(home_arr)
head(away_arr)
away <- reshape(away_arr, idvar = "AwayTeam", v.names = "FTAG", timevar = "HomeTeam", direction = "wide")
away
away <- away[,4:23]
away <- away[,c(20,1:19)]
away
away_arr <- arrange(result_0910, AwayTeam, HomeTeam)
away <- reshape(away_arr, idvar = "AwayTeam", v.names = "FTAG", timevar = "HomeTeam", direction = "wide")
nms <- as.character(sort(away$AwayTeam))
away
away <- away[,4:23]
away <- away[,c(20,1:19)]
rownames(away) <- nms
colnames(away) <- nms
away[is.na(away)] <- 0
away <- as.matrix(away)
away
# create a diagonal matrix of the 1 / awaygoalpermatch of each team
ag <- abs_goal_0910$away_goal
ag <- ag / 19
ag <- 1 / ag
ag <- diag(ag)
# create a distribution of away goals
distr_ag <- ag %*% away
rownames(distr_ag) <- nms
distr_ag
pheatmap(distr_ag, cutree_rows = 6)
abs_goal_0910
away_arr
filter(away_arr, HomeTeam == "Burnley")
result_1920 <- filter(result, Season == "2019-20")
source("code/dataframes/overall_goals.R")
abs_goal <- overall_goals(HomeTeam = result$HomeTeam, AwayTeam = result$AwayTeam,
Season = result$Season, FTHG = result$FTHG, FTAG = result$FTAG)
# filter for the 2009/10 season
abs_goal_0910 <- filter(abs_goal, Season == "2009-10")
# read in data of match results
result <- read.csv("data/results1993-2020.csv")
result <- result[, c(1,3,4,5,6)]
# filter for the 2009/10 seaon
result_1920 <- filter(result, Season == "2019-20")
# read in the absolute goals dataframe to observe the overall goals scored by each team
source("code/dataframes/overall_goals.R")
abs_goal <- overall_goals(HomeTeam = result$HomeTeam, AwayTeam = result$AwayTeam,
Season = result$Season, FTHG = result$FTHG, FTAG = result$FTAG)
# filter for the 2009/10 season
abs_goal_1920 <- filter(abs_goal, Season == "2019-20")
# create a matrix of FTHG of the home team against the opposition
home_arr <- arrange(result_1920, HomeTeam, AwayTeam)
home <- reshape(home_arr, idvar = "HomeTeam", v.names = "FTHG", timevar = "AwayTeam", direction = "wide")
nms <- as.character(sort(home$HomeTeam))
home <- home[,4:23]
home <- home[,c(20,1:19)]
rownames(home) <- nms
colnames(home) <- nms
home[is.na(home)] <- 0
home <- as.matrix(home)
# create a matrix of FTAG of Away team against the opposition
away_arr <- arrange(result_1920, AwayTeam, HomeTeam)
away <- reshape(away_arr, idvar = "AwayTeam", v.names = "FTAG", timevar = "HomeTeam", direction = "wide")
nms <- as.character(sort(away$AwayTeam))
away <- away[,4:23]
away <- away[,c(20,1:19)]
rownames(away) <- nms
colnames(away) <- nms
away[is.na(away)] <- 0
away <- as.matrix(away)
hg <- abs_goal_1920$home_goal
hg <- hg / 19
hg <- 1 / hg
hg <- diag(hg)
# create a distribution of home goals
distr_hg <- hg %*% home
rownames(distr_hg) <- nms
# create a diagonal matrix of the 1 / awaygoalpermatch of each team
ag <- abs_goal_1920$away_goal
ag <- ag / 19
ag <- 1 / ag
ag <- diag(ag)
# create a dist
# create a distribution of away goals
distr_ag <- ag %*% away
rownames(distr_ag) <- nms
# create a heatmpa of the goal distribution of home and away teams
library(pheatmap)
pheatmap(distr_hg, cutree_rows = 6)
pheatmap(distr_ag, cutree_rows = 6)
filter(home_arr, HomeTeam == "Liverpool")
filter(home_arr, HomeTeam == "Watford")
filter(home_arr, AwayTeam == "Liverpool")
?png
pheatmap(distr_hg, cutree_rows = 6)
title("Cluster")
?pheatmap
pheatmap(distr_hg, cutree_rows = 6, main = "Heatmap of Home Goals Scored by Premier League 2009/2010 Season")
pheatmap(distr_hg, cutree_rows = 6, main = "Heatmap of the Goal Distribution of Home Teams (2009/2010)")
pheatmap(distr_hg, cutree_rows = 6, main = "Heatmap of the Goal Distribution of Home Teams (2009/2010 Season)")
pheatmap(distr_hg, cutree_rows = 6, main = "Heatmap of the Goal Distribution of English Premier League Home Teams (2009/2010)")
png("code/eda/cluster_analysis/cluster-analysis-2009-2010-home.png")
pheatmap(distr_hg, cutree_rows = 6, main = "Heatmap of the Goal Distribution of English Premier League Home Teams (2009/2010)")
dev.off()
pheatmap(distr_hg, cutree_rows = 6, main = "Heatmap of the Goal Distribution of English Premier League Home Teams (2009/2010)")
# read in data of match results
result <- read.csv("data/results1993-2020.csv")
result <- result[, c(1,3,4,5,6)]
# filter for the 2009/10 seaon
result_0910 <- filter(result, Season == "2009-10")
# read in the absolute goals dataframe to observe the overall goals scored by each team
source("code/dataframes/overall_goals.R")
abs_goal <- overall_goals(HomeTeam = result$HomeTeam, AwayTeam = result$AwayTeam,
Season = result$Season, FTHG = result$FTHG, FTAG = result$FTAG)
# filter for the 2009/10 season
abs_goal_0910 <- filter(abs_goal, Season == "2009-10")
# create a matrix of FTHG of the home team against the opposition
home_arr <- arrange(result_0910, HomeTeam, AwayTeam)
home <- reshape(home_arr, idvar = "HomeTeam", v.names = "FTHG", timevar = "AwayTeam", direction = "wide")
nms <- as.character(sort(home$HomeTeam))
home <- home[,4:23]
home <- home[,c(20,1:19)]
rownames(home) <- nms
colnames(home) <- nms
home[is.na(home)] <- 0
home <- as.matrix(home)
result_0910 <- filter(result, Season == "2009-10")
home_arr <- arrange(result_0910, HomeTeam, AwayTeam)
home <- reshape(home_arr, idvar = "HomeTeam", v.names = "FTHG", timevar = "AwayTeam", direction = "wide")
nms <- as.character(sort(home$HomeTeam))
home <- home[,4:23]
home <- home[,c(20,1:19)]
rownames(home) <- nms
colnames(home) <- nms
home[is.na(home)] <- 0
home <- as.matrix(home)
# create a matrix of FTAG of Away team against the opposition
away_arr <- arrange(result_0910, AwayTeam, HomeTeam)
away <- reshape(away_arr, idvar = "AwayTeam", v.names = "FTAG", timevar = "HomeTeam", direction = "wide")
nms <- as.character(sort(away$AwayTeam))
away <- away[,4:23]
away <- away[,c(20,1:19)]
rownames(away) <- nms
colnames(away) <- nms
away[is.na(away)] <- 0
away <- as.matrix(away)
# create a diagonal matrix of the 1 / homegoalpermatch of each team
hg <- abs_goal_0910$home_goal
hg <- hg / 19
hg <- 1 / hg
hg <- diag(hg)
# create a distribution of home goals
distr_hg <- hg %*% home
rownames(distr_hg) <- nms
# create a diagonal matrix of the 1 / awaygoalpermatch of each team
ag <- abs_goal_0910$away_goal
ag <- ag / 19
ag <- 1 / ag
ag <- diag(ag)
distr_ag <- ag %*% away
rownames(distr_ag) <- nms
pheatmap(distr_hg, cutree_rows = 6, main = "Heatmap of the Goal Distribution of English Premier League Home Teams (2009/2010)")
library(pheatmap)
pheatmap(distr_hg, cutree_rows = 6, main = "Heatmap of the Goal Distribution of English Premier League Home Teams (2009/2010)")
png("code/eda/cluster_analysis/cluster-analysis-2009-2010-home.png")
pheatmap(distr_hg, cutree_rows = 6, main = "Heatmap of the Goal Distribution of English Premier League Home Teams (2009/2010)")
dev.off()
dev.off()
pheatmap(distr_hg, cutree_rows = 6, main = "Heatmap of the Goal Distribution of English Premier League Home Teams (2009/2010)")
png("cluster-analysis-2009-2010-home.png")
pheatmap(distr_hg, cutree_rows = 6, main = "Heatmap of the Goal Distribution of English Premier League Home Teams (2009/2010)")
dev.off()
dev.off()
pheatmap(distr_hg, cutree_rows = 6, main = "Heatmap of the Goal Distribution of English Premier League Home Teams (2009/2010)")
pdf("cluster-analysis-2009-2010-home.png")
pheatmap(distr_hg, cutree_rows = 6, main = "Heatmap of the Goal Distribution of English Premier League Home Teams (2009/2010)")
dev.off()
pdf("cluster-analysis-2009-2010-home.pdf")
pheatmap(distr_hg, cutree_rows = 6, main = "Heatmap of the Goal Distribution of English Premier League Home Teams (2009/2010)")
dev.off()
dev.off()
pheatmap(distr_hg, cutree_rows = 6, main = "Heatmap of the Goal Distribution of English Premier League Home Teams (2009/2010)")
pheatmap(distr_ag, cutree_rows = 6, main = "Heatmap of the Goal Distribution of English Premier League Away Teams (2009/2010)")
pheatmap(distr_hg, cutree_rows = 6, main = "Heatmap of the Goal Distribution of English Premier League Home Teams (2009/2010)")
result <- read.csv("data/results1993-2020.csv")
result <- result[, c(1,3,4,5,6)]
# filter for the 2009/10 seaon
result_1920 <- filter(result, Season == "2019-20")
# read in the absolute goals dataframe to observe the overall goals scored by each team
source("code/dataframes/overall_goals.R")
abs_goal <- overall_goals(HomeTeam = result$HomeTeam, AwayTeam = result$AwayTeam,
Season = result$Season, FTHG = result$FTHG, FTAG = result$FTAG)
# filter for the 2009/10 season
abs_goal_1920 <- filter(abs_goal, Season == "2019-20")
# create a matrix of FTHG of the home team against the opposition
home_arr <- arrange(result_1920, HomeTeam, AwayTeam)
home <- reshape(home_arr, idvar = "HomeTeam", v.names = "FTHG", timevar = "AwayTeam", direction = "wide")
nms <- as.character(sort(home$HomeTeam))
home <- home[,4:23]
home <- home[,c(20,1:19)]
rownames(home) <- nms
colnames(home) <- nms
home[is.na(home)] <- 0
home <- as.matrix(home)
# create a matrix of FTAG of Away team against the opposition
away_arr <- arrange(result_1920, AwayTeam, HomeTeam)
away <- reshape(away_arr, idvar = "AwayTeam", v.names = "FTAG", timevar = "HomeTeam", direction = "wide")
nms <- as.character(sort(away$AwayTeam))
away <- away[,4:23]
away <- away[,c(20,1:19)]
rownames(away) <- nms
colnames(away) <- nms
away[is.na(away)] <- 0
away <- as.matrix(away)
hg <- abs_goal_1920$home_goal
hg <- hg / 19
hg <- 1 / hg
hg <- diag(hg)
# create a distribution of home goals
distr_hg <- hg %*% home
rownames(distr_hg) <- nms
# create a diagonal matrix of the 1 / awaygoalpermatch of each team
ag <- abs_goal_1920$away_goal
ag <- ag / 19
ag <- 1 / ag
ag <- diag(ag)
# create a distribution of away goals
distr_ag <- ag %*% away
rownames(distr_ag) <- nms
pheatmap(distr_hg, cutree_rows = 6, main = "Heatmap of the Goal Distribution of English Premier League Home Teams (2019/2020)")
pheatmap(distr_ag, cutree_rows = 6, main = "Heatmap of the Goal Distribution of English Premier League Away Teams (2019/2020)")
pheatmap(distr_ag, cutree_rows = 6, main = "Heatmap of the Goal Distribution of English Premier League Away Teams (2019/2020)")
