rlang::last_error()
head(result_tbl)
qplot(FTHG, data = subset(result_tbl, HomeTeam == "Liverpool", Season %in% c("1617", "1718", "1819")))
subset(result_tbl, HomeTeam == "Liverpool", Season %in% c("1617", "1718", "1819"))
library(dplyr)
qplot(FTHG, data = filter(subset(result_tbl, HomeTeam == "Liverpool"), Season %in% c("1617", "1718", "1819")))
qplot(FTHG,
data = filter(subset(result_tbl, HomeTeam == "Liverpool"), Season %in% c("1617", "1718", "1819")),
binwidth = 0.75)
qplot(FTHG,
data = filter(subset(result_tbl, HomeTeam == "Liverpool"), Season %in% c("1617", "1718", "1819")))
qplot(FTHG,
data = filter(subset(result_tbl, HomeTeam == "Liverpool"), Season %in% c("1617", "1718", "1819")))
qplot(FTAG,
data = filter(subset(result_tbl, AwayTeam == "Liverpool"), Season %in% c("1617", "1718", "1819")))
qplot(FTHG,
data = filter(subset(result_tbl, HomeTeam == "Man City"), Season %in% c("1617", "1718", "1819")))
qplot(FTAG,
data = filter(subset(result_tbl, AwayTeam == "Man City"), Season %in% c("1617", "1718", "1819")))
library("jsonlite")
json_file <- 'https://datahub.io/sports-data/english-premier-league/datapackage.json'
json_data <- fromJSON(paste(readLines(json_file), collapse=""))
save(json_data, file = "data/datahub-premierleague-datapackage.json")
# get list of all resources:
print(json_data$resources$name)
source("code/extractSeason.R")
result_tbl <- rbind(
extractSeason(season = 32, year = "0910"),
extractSeason(season = 31, year = "1011"),
extractSeason(season = 30, year = "1112"),
extractSeason(season = 29, year = "1213"),
extractSeason(season = 28, year = "1314"),
extractSeason(season = 27, year = "1415"),
extractSeason(season = 26, year = "1516"),
extractSeason(season = 25, year = "1617"),
extractSeason(season = 24, year = "1718"),
extractSeason(season = 23, year = "1819")
)
result_tbl <- transform(result_tbl, Season = as.factor(Season))
head(result_tbl)
tail(result_tbl)
save(result_tbl, file = "data/result_tbl.R")
# a. result_tbl is a dataframe containing all of the resuts from the 2009/2010 premier league season to
# the 2018/2019 season
load("data/result_tbl.R")
# b. team_list is a list object containing factor vectors which contain the teams for each Premier League
# season
load("data/team_list.R")
# c. goalSummary is a dataframe containing a summary of the overall goals scored and conceded by each team
# in the Premier league by season
load("data/goalSummary.R")
# relegated during these seasons
library(dplyr)
goalSummary_1319 <- filter(goalSummary, Season %in% c("1314", "1415", "1516", "1617", "1718", "1819"))
teams_1319 <- intersect(team_list$teams_1819,
intersect(team_list$teams_1718,
intersect(team_list$teams_1617,
intersect(team_list$teams_1516,
intersect(team_list$teams_1415, team_list$teams_1314)))))
goalSummary_1319 <- filter(goalSummary_1319, Team %in% teams_1319)
# plot a linear model using lattice
library(lattice)
# look at a linear model of the goals scored home and away by each of the 14 teams that have stayed in the Premier League
# the last 3 seasons
attach(goalSummary_1319)
goalPlot_1319 <- xyplot(GoalScored ~ Season | Team * HomeorAway, pch = 19, layout = c(10,2), panel = function(x, y, ...) {
panel.xyplot(x, y, ...)
panel.lmline(x, y, col = 2)
})
detach(goalSummary_1319)
print(goalPlot_1319)
# Goal conceded
attach(goalSummary_1319)
goalPlot_1319 <- xyplot(GoalAgainst ~ Season | Team * HomeorAway, pch = 19, layout = c(10,2), panel = function(x, y, ...) {
panel.xyplot(x, y, ...)
panel.lmline(x, y, col = 2)
})
detach(goalSummary_1319)
print(goalPlot_1319)
goalSummary
team_list <- list(
"teams_0910" = sort(unique(extractSeason(season = 32, year = "0910")$HomeTeam)),
"teams_1011" = sort(unique(extractSeason(season = 31, year = "1011")$HomeTeam)),
"teams_1112" = sort(unique(extractSeason(season = 30, year = "1112")$HomeTeam)),
"teams_1213" = sort(unique(extractSeason(season = 29, year = "1213")$HomeTeam)),
"teams_1314" = sort(unique(extractSeason(season = 28, year = "1314")$HomeTeam)),
"teams_1415" = sort(unique(extractSeason(season = 27, year = "1415")$HomeTeam)),
"teams_1516" = sort(unique(extractSeason(season = 26, year = "1516")$HomeTeam)),
"teams_1617" = sort(unique(extractSeason(season = 25, year = "1617")$HomeTeam)),
"teams_1718" = sort(unique(extractSeason(season = 24, year = "1718")$HomeTeam)),
"teams_1819" = sort(unique(extractSeason(season = 23, year = "1819")$HomeTeam)),
)
team_list
team_list <- list(
"teams_0910" = sort(unique(extractSeason(season = 32, year = "0910")$HomeTeam)),
"teams_1011" = sort(unique(extractSeason(season = 31, year = "1011")$HomeTeam)),
"teams_1112" = sort(unique(extractSeason(season = 30, year = "1112")$HomeTeam)),
"teams_1213" = sort(unique(extractSeason(season = 29, year = "1213")$HomeTeam)),
"teams_1314" = sort(unique(extractSeason(season = 28, year = "1314")$HomeTeam)),
"teams_1415" = sort(unique(extractSeason(season = 27, year = "1415")$HomeTeam)),
"teams_1516" = sort(unique(extractSeason(season = 26, year = "1516")$HomeTeam)),
"teams_1617" = sort(unique(extractSeason(season = 25, year = "1617")$HomeTeam)),
"teams_1718" = sort(unique(extractSeason(season = 24, year = "1718")$HomeTeam)),
"teams_1819" = sort(unique(extractSeason(season = 23, year = "1819")$HomeTeam))
)
save(team_list, file = "data/team_list.R")
team_list
goalSummary <- rbind(
summary_df(season = filter(result_tbl, Season == "0910"), year = "0910"),
summary_df(season = filter(result_tbl, Season == "1011"), year = "1011"),
summary_df(season = filter(result_tbl, Season == "1112"), year = "1112"),
summary_df(season = filter(result_tbl, Season == "1213"), year = "1213"),
summary_df(season = filter(result_tbl, Season == "1314"), year = "1314"),
summary_df(season = filter(result_tbl, Season == "1415"), year = "1415"),
summary_df(season = filter(result_tbl, Season == "1516"), year = "1516"),
summary_df(season = filter(result_tbl, Season == "1617"), year = "1617"),
summary_df(season = filter(result_tbl, Season == "1718"), year = "1718"),
summary_df(season = filter(result_tbl, Season == "1819"), year = "1819")
)
source("code/summary_df.R")
## Note: this variation will much up the predict function which will need adapted to this new format
goalSummary <- rbind(
summary_df(season = filter(result_tbl, Season == "0910"), year = "0910"),
summary_df(season = filter(result_tbl, Season == "1011"), year = "1011"),
summary_df(season = filter(result_tbl, Season == "1112"), year = "1112"),
summary_df(season = filter(result_tbl, Season == "1213"), year = "1213"),
summary_df(season = filter(result_tbl, Season == "1314"), year = "1314"),
summary_df(season = filter(result_tbl, Season == "1415"), year = "1415"),
summary_df(season = filter(result_tbl, Season == "1516"), year = "1516"),
summary_df(season = filter(result_tbl, Season == "1617"), year = "1617"),
summary_df(season = filter(result_tbl, Season == "1718"), year = "1718"),
summary_df(season = filter(result_tbl, Season == "1819"), year = "1819")
)
goalSummary
save(goalSummary, file = "data/goalSummary.R")
# a. result_tbl is a dataframe containing all of the resuts from the 2009/2010 premier league season to
# the 2018/2019 season
load("data/result_tbl.R")
# b. team_list is a list object containing factor vectors which contain the teams for each Premier League
# season
load("data/team_list.R")
# c. goalSummary is a dataframe containing a summary of the overall goals scored and conceded by each team
# in the Premier league by season
load("data/goalSummary.R")
library(dplyr)
goalSummary_1319 <- filter(goalSummary, Season %in% c("1314", "1415", "1516", "1617", "1718", "1819"))
teams_1319 <- intersect(team_list$teams_1819,
intersect(team_list$teams_1718,
intersect(team_list$teams_1617,
intersect(team_list$teams_1516,
intersect(team_list$teams_1415, team_list$teams_1314)))))
goalSummary_1319 <- filter(goalSummary_1319, Team %in% teams_1319)
# plot a linear model using lattice
library(lattice)
# look at a linear model of the goals scored home and away by each of the 14 teams that have stayed in the Premier League
# the last 3 seasons
attach(goalSummary_1319)
goalPlot_1319 <- xyplot(GoalScored ~ Season | Team * HomeorAway, pch = 19, layout = c(10,2), panel = function(x, y, ...) {
panel.xyplot(x, y, ...)
panel.lmline(x, y, col = 2)
})
detach(goalSummary_1319)
print(goalPlot_1319)
# Goal conceded
attach(goalSummary_1319)
goalPlot_1319 <- xyplot(GoalAgainst ~ Season | Team * HomeorAway, pch = 19, layout = c(10,2), panel = function(x, y, ...) {
panel.xyplot(x, y, ...)
panel.lmline(x, y, col = 2)
})
detach(goalSummary_1319)
print(goalPlot_1319)
library(ggplot2)
g <- ggplot(data = goalSummary_1319, aes(as.numeric(Season), GoalScored, color = HomeorAway))
goalPlot_1319 <- g + geom_point() +
geom_smooth(method = "lm", se = FALSE) + facet_grid(. ~ Team) +
print(goalPlot_1319)
table(result_tbl$FTHG)
table(result_tbl$FTAG)
table(rbind(result_tbl$FTHG, result_tbl$FTAG))
# Plot histograms
par(mfrow = c(1, 3), mar = c(4, 4, 2, 1), oma = c(0,0,2,0))
hist(result_tbl$FTHG, col = "blue", xlab = "Home Goals", main = "Home Goals from 2009 to 2020")
hist(result_tbl$FTAG, col = "blue", xlab = "Away Goals", main = "Away Goals from 2009 to 2020")
hist(rbind(result_tbl$FTHG, result_tbl$FTAG), col = "green", xlab = "Total Goals", main = "Total Goals from 2009 to 2020")
mtext("Distribution of Goals Scored in the Premier League", outer = TRUE)
# ggplot implementation for individual teams
qplot(FTHG,
data = filter(subset(result_tbl, HomeTeam == "Man City"), Season %in% c("1617", "1718", "1819")))
qplot(FTAG,
data = filter(subset(result_tbl, AwayTeam == "Man City"), Season %in% c("1617", "1718", "1819")))
source("code/distTeam.R")
qplot(FTHG,
data = filter(subset(result_tbl, HomeTeam == "Man City"), Season %in% c("1617", "1718", "1819")),
title = "Distribution Home Goals")
qplot(FTHG,
data = filter(subset(result_tbl, HomeTeam == "Man City"), Season %in% c("1617", "1718", "1819")),
main = "Distribution Home Goals")
qplot(FTHG,
data = filter(subset(result_tbl, HomeTeam == "Man City"), Season %in% c("1617", "1718", "1819")),
main = "Distribution Home Goals", color = "blue")
data = filter(subset(result_tbl, HomeTeam == "Man City"), Season %in% c("1617", "1718", "1819")),
main = "Distribution Home Goals", fill = "blue")
qplot(FTHG,
data = filter(subset(result_tbl, HomeTeam == "Man City"), Season %in% c("1617", "1718", "1819")),
main = "Distribution Home Goals")
?ggplot2::qplot
?ggplot
g <- ggplot(data = filter(subset(result_tbl, HomeTeam == "Man City"), Season %in% c("1617", "1718", "1819")),
mapping = aes(FTHG))
g + geom_histogram()
g + geom_histogram(fill = "blue") + title("Distribution of Home Goals")
g + geom_histogram(fill = "blue", alpha = .2) + title("Distribution of Home Goals")
g + geom_histogram(fill = "blue", alpha = .4, col = "red") + title("Distribution of Home Goals")
g + geom_histogram(fill = "blue", alpha = .4, col = "red") + labs(title = "Distribution of Home Goals")
g + geom_histogram(fill = "blue", alpha = .4, col = "red") + labs(title = "Man City Home Goal Distribution 2016 - 2019")
g <- ggplot(data = filter(subset(result_tbl, HomeTeam == "Man City"), Season %in% c("1617", "1718", "1819")),
mapping = aes(FTHG))
g + geom_histogram(fill = "blue", alpha = .4, col = "red") + labs(title = "Man City Home Goal Distribution 2016 - 2019")
g <- ggplot(data = filter(subset(result_tbl, AwayTeam == "Man City"), Season %in% c("1617", "1718", "1819")),
mapping = aes(FTAG))
g + geom_histogram(fill = "blue", alpha = .4, col = "red") + labs(title = "Man City Away Goal Distribution 2016 - 2019")
g <- ggplot(data = filter(subset(result_tbl, HomeTeam == "Man City"), Season %in% c("1617", "1718", "1819")),
mapping = aes(FTHG))
g + geom_bar(fill = "blue", alpha = .4, col = "red") + labs(title = "Man City Home Goal Distribution 2016 - 2019")
g <- ggplot(data = filter(subset(result_tbl, AwayTeam == "Man City"), Season %in% c("1617", "1718", "1819")),
mapping = aes(FTAG))
g + geom_bar(fill = "blue", alpha = .4, col = "red") + labs(title = "Man City Away Goal Distribution 2016 - 2019")
g + geom_bar(fill = "blue", alpha = .4, col = "red") + labs(title = "Man City Away Goal Distribution 2016 - 2019") + geom_smooth()
?geom_smooth
g <- ggplot(data = filter(subset(result_tbl, HomeTeam == "Liverpool"), Season %in% c("1617", "1718", "1819")),
mapping = aes(FTHG))
g + geom_bar(fill = "red", alpha = .4, col = "black") + labs(title = "Liverpool Home Goal Distribution 2016 - 2019")
g <- ggplot(data = filter(subset(result_tbl, AwayTeam == "Liverpool"), Season %in% c("1617", "1718", "1819")),
mapping = aes(FTAG))
g + geom_bar(fill = "red", alpha = .4, col = "black") + labs(title = "Liverpool Away Goal Distribution 2016 - 2019")
source("code/distTeam.R")
g <- ggplot(data = filter(subset(result_tbl, HomeTeam == "Liverpool"), Season %in% c("1718", "1819")),
mapping = aes(FTHG))
g + geom_bar(fill = "red", alpha = .4, col = "black") + labs(title = "Liverpool Home Goal Distribution 2016 - 2019")
g <- ggplot(data = filter(subset(result_tbl, AwayTeam == "Liverpool"), Season %in% c("1718", "1819")),
mapping = aes(FTAG))
g + geom_bar(fill = "red", alpha = .4, col = "black") + labs(title = "Liverpool Away Goal Distribution 2016 - 2019")
source("code/distTeam.R")
g <- ggplot(data = filter(subset(result_tbl, HomeTeam == "Liverpool"), Season %in% c("1718", "1819")),
mapping = aes(FTHG))
g + geom_bar(fill = "red", alpha = .8, col = "black") + labs(title = "Liverpool Home Goal Distribution 2016 - 2019")
g <- ggplot(data = filter(subset(result_tbl, AwayTeam == "Liverpool"), Season %in% c("1718", "1819")),
mapping = aes(FTAG))
g + geom_bar(fill = "red", alpha = .8, col = "black") + labs(title = "Liverpool Away Goal Distribution 2016 - 2019")
source("code/distTeam.R")
g <- ggplot(data = filter(subset(result_tbl, HomeTeam == "Bournemouth"), Season %in% c("1718", "1819")),
mapping = aes(FTHG))
g + geom_bar(fill = "darksalmon", alpha = .8, col = "black") + labs(title = "Liverpool Home Goal Distribution 2016 - 2019")
g <- ggplot(data = filter(subset(result_tbl, HomeTeam == "Burnley"), Season %in% c("1516", "1617", "1718", "1819")),
mapping = aes(FTHG))
g + geom_bar(fill = "darksalmon", alpha = .8, col = "black") + labs(title = "Liverpool Home Goal Distribution 2016 - 2019")
g <- ggplot(data = filter(subset(result_tbl, HomeTeam == "Burnley"), Season %in% c("1516", "1617", "1718", "1819")),
mapping = aes(FTHG))
g + geom_bar(fill = "darkred", alpha = .8, col = "black") + labs(title = "Burnley Home Goal Distribution 2015 - 2019")
g <- ggplot(data = filter(subset(result_tbl, AwayTeam == "Liverpool"), Season %in% c("1516", "1617", "1718", "1819")),
mapping = aes(FTAG))
g + geom_bar(fill = "darkred", alpha = .8, col = "black") + labs(title = "Burnley Away Goal Distribution 2015 - 2019")
g <- ggplot(data = filter(subset(result_tbl, HomeTeam == "Burnley"), Season %in% c("1516", "1617", "1718", "1819")),
mapping = aes(FTHG))
g + geom_bar(fill = "darkred", alpha = .8, col = "black") + labs(title = "Burnley Home Goal Distribution 2015 - 2019")
g <- ggplot(data = filter(subset(result_tbl, AwayTeam == "Burnley"), Season %in% c("1516", "1617", "1718", "1819")),
mapping = aes(FTAG))
g + geom_bar(fill = "darkred", alpha = .8, col = "black") + labs(title = "Burnley Away Goal Distribution 2015 - 2019")
g <- ggplot(data = filter(subset(result_tbl, HomeTeam == "Watford"), Season %in% c("1617", "1718", "1819")),
mapping = aes(FTHG))
g + geom_bar(fill = "yellow", alpha = .8, col = "black") + labs(title = "Watford Home Goal Distribution 2015 - 2019")
g <- ggplot(data = filter(subset(result_tbl, HomeTeam == "Watford"), Season %in% c("1617", "1718", "1819")),
mapping = aes(FTHG))
g + geom_bar(fill = "yellow", alpha = .8, col = "black") + labs(title = "Watford Home Goal Distribution 2015 - 2019")
g <- ggplot(data = filter(subset(result_tbl, AwayTeam == "Watford"), Season %in% c("1617", "1718", "1819")),
mapping = aes(FTAG))
g + geom_bar(fill = "darkred", alpha = .8, col = "black") + labs(title = "Watford Away Goal Distribution 2015 - 2019")
g <- ggplot(data = filter(subset(result_tbl, AwayTeam == "Watford"), Season %in% c("1617", "1718", "1819")),
mapping = aes(FTAG))
g + geom_bar(fill = "darkred", alpha = .8, col = "yellow") + labs(title = "Watford Away Goal Distribution 2015 - 2019")
g <- ggplot(data = filter(subset(result_tbl, HomeTeam == "Crystal Palace"), Season %in% c("1617", "1718", "1819")),
mapping = aes(FTHG))
g + geom_bar(fill = "red", alpha = .8, col = "blue") + labs(title = "Crystal Palace Home Goal Distribution 2015 - 2019")
g <- ggplot(data = filter(subset(result_tbl, AwayTeam == "Crystal Palace"), Season %in% c("1617", "1718", "1819")),
mapping = aes(FTAG))
g + geom_bar(fill = "red", alpha = .8, col = "blue") + labs(title = "Crystal Palace Away Goal Distribution 2015 - 2019")
source("code/distTeam.R")
# the 2018/2019 season
load("data/result_tbl.R")
# b. team_list is a list object containing factor vectors which contain the teams for each Premier League
# season
load("data/team_list.R")
# c. goalSummary is a dataframe containing a summary of the overall goals scored and conceded by each team
# in the Premier league by season
load("data/goalSummary.R")
head(goalSummary)
fixtures <- read.csv("epl-2020-GMTStandardTime.csv")
fixtures <- read.csv("data/fixtures/epl-2020-GMTStandardTime.csv")
head(fixtures)
str(fixtures)
teams_2021 <- sort(unique(fixtures$Home.Team))
teams_2021
rand <- runif(80, 0, 4)
rand
predictGoalMatrix
predictGoalMatrix <- matrix(rand, 4, 20)
predictGoalMatrix
predictGoalMatrix <- matrix(rand, 20, 4)
predictGoalMatrix
colnames(predictGoalMatrix) <- c("HomeGoals", "AwayGoals", "HomeConcede", "AwayConcede")
predictGoalMatrix
rownames(predictGoalMatrix) <- teams_2021
predictGoalMatrix
rand <- runif(80, 10, 50)
predictGoalMatrix <- matrix(rand, 20, 4)
colnames(predictGoalMatrix) <- c("HomeGoals", "AwayGoals", "HomeConcede", "AwayConcede")
rownames(predictGoalMatrix) <- teams_2021
predictGoalMatrix
?matrix
A <- matrix(, nrow = 10, ncol = 10)
A
?sapply
sapply(teams_2021, function(x) paste0(x, ".Home"))
proportionGoalMatrix <- matrix(data = NA, ncol = 40, nrow = 20)
colNames <- c(sapply(teams_2021, function(x) paste0(x, ".Home")), sapply(teams_2021, function(x) paste0(x, ".Away")))
colnames(proportionGoalMatrix) <- colNames
rownames(proportionGoalMatrix) <- teams
rownames(proportionGoalMatrix) <- teams_2021
proportionGoalMatrix
predictGoalMatrix
proportionGoalMatrix[1:20, 1:5]
predictGoalMatrix
proportionGoalMatrix[1:20, 1:10]
predictGoalMatrix$HomeGoals[["Arsenal"]]
predictGoalMatrix$HomeGoals["Arsenal"]
predictGoalMatrix[["Arsenal", "HomeGoals"]]
sum(predictGoalMatrix$HomeGoals)
sum(predictGoalMatrix[[, "HomeGoals"]])
sum(predictGoalMatrix[["HomeGoals"]])
sum(predictGoalMatrix[["HomeGoals",]])
predictGoalMatrix[[, "HomeGoals"]]
predictGoalMatrix[[:, "HomeGoals"]]
predictGoalMatrix[[1:20, "HomeGoals"]]
predictGoalMatrix[, "HomeGoals"]
sum(predictGoalMatrix[,"HomeGoals"])
sum(predictGoalMatrix[,"AwayGoals"])
totalHomeGoal <- sum(predictGoalMatrix[, "HomeGoals"])
totalAwayGoal <- sum(predictGoalMatrix[, "AwayGoals"])
source("code/predict.R")
predict("Arsenal", "Aston Villa")
predict("Arsenal", "Aston Villa", predictGoalMatrix)
z <- predict("Arsenal", "Aston Villa", predictGoalMatrix)
source("code/predict.R")
predict("Arsenal", "Aston Villa", predictGoalMatrix)
source("code/predict.R")
predict("Arsenal", "Aston Villa", predictGoalMatrix)
source("code/predict.R")
predict("Arsenal", "Aston Villa", predictGoalMatrix)
goalSummary
goalSummary1819 <- filter(goalSummary, Season = "1819")
goalSummary1819 <- filter(goalSummary, Season == "1819")
library(dplyr)
goalSummary1819 <- filter(goalSummary, Season = "1819")
goalSummary1819 <- filter(goalSummary, Season == "1819")
goalSummary1819
predictGoalMatrix
teams_1819 <- sort(unique(goalSummary1819$Team))
HomeGoals <- filter(goalSummary1819, HomeorAway == "home")$GoalScored
HomeGoals
HomeGoals <- filter(goalSummary1819, HomeorAway == "away")$GoalScored
HomeGoals <- filter(goalSummary1819, HomeorAway == "home")$GoalScored
AwayGoals <- filter(goalSummary1819, HomeorAway == "away")$GoalScored
HomeConcede <-  filter(goalSummary1819, HomeorAway == "home")$GoalAgainst
AwayConcede <- filter(goalSummary1819, HomeorAway == "away")$GoalAgainst
predictGoalMatrix1819 <- data.frame(HomeGoals = HomeGoals, AwayGoals = AwayGoals, HomeConcede = HomeConcede, AwayConcede = AwayConcede, row.names = teams_1819)
predictGoalMatrix1819
teams_1819
predictGoalMatrix1819 <- data.frame(HomeGoals = HomeGoals, AwayGoals = AwayGoals, HomeConcede = HomeConcede, AwayConcede = AwayConcede, row.names = team_list$teams_1819)
predictGoalMatrix1819
filter(goalSummary1819, HomeorAway == "home")$GoalScored
goalSummary1819[1:20]
predict("Arsenal", "Chelsea", predictGoalMatrix1819)
predict("Bournemouth", "Chelsea", predictGoalMatrix1819)
predict("Chelsea", "Bournemouth", predictGoalMatrix1819)
sapply(team_list$teams_1819, function(HomeTeam) sapply(team_list$teams_1819, function(AwayTeam) predict(HomeTeam, AwayTeam, predictGoalMatrix1819)))
data <- sapply(team_list$teams_1819, function(HomeTeam) sapply(team_list$teams_1819, function(AwayTeam) predict(HomeTeam, AwayTeam, predictGoalMatrix1819)))
proportionGoalMatrix <- matrix(data = data, ncol = 20, nrow = 40)
rowNames <- c(sapply(teams_2021, function(x) paste0(x, ".Home")), sapply(teams_2021, function(x) paste0(x, ".Away")))
rownames(proportionGoalMatrix) <- rowNames
colnames(teams_2021)
colnames(proportionGoalMatrix) <- teams_2021
proportionGoalMatrix
fixtures
load("data/result_tbl.R")
# b. team_list is a list object containing factor vectors which contain the teams for each Premier League
# season
load("data/team_list.R")
# c. goalSummary is a dataframe containing a summary of the overall goals scored and conceded by each team
# in the Premier league by season
load("data/goalSummary.R")
results <- read.csv("data/results1993-2020/results.csv")
head(results)
str(results)
tail(results)
head(resultws)
head(results)
Date <- as.Date(results$Date)
head(Date)
Date > 2000
Date > "2000-01-01"
sum(Date > "2005-08-01")
5700 / 380
results <- transform(results, Date = as.Date(Date))
str(results)
library(dplyr)
results <- filter(results, Date > "2005-08-01")
head(results)
save(results, file = "data/results.R")
home <- results %>% group_by(Season, HomeTeam) %>% summarise(GoalScored=sum(FTHG), GoalAgainst=sum(FTAG))
head(home)
goalSummary
source("code/summary_df.R")
summaryGoals(results)
goalSummary <- as.data.frame(summaryGoals(results))
goalSummary
filter(goalSummary, Season == "2019-20")
goalSummary <- goalSummary %>% group_by(Team)
filter(goalSummary, Season == "2019-20")
filter(goalSummary, Team == "Arsenal")
?merge
source("code/summary_df.R")
summaryGoals(results)
source("code/summary_df.R")
summaryGoals(results)
source("code/summary_df.R")
summaryGoals(results)
source("code/summary_df.R")
summaryGoals(results)
summaryGoals <- summaryGoals(results)
source('C:/Users/MattH/dataScience/projects/FantasyFootball/code/summary_df.R')
196/7
summaryGoals()
summaryGoals
goalSummary
teams <- group_by(goalSummary, Season)
teams <- summarise(teams = sort(unique(Team)))
teams <- summarise(teams, teams = sort(unique(Team)))
teams
teams_1920 <- filter(goalSummary, Season == "2019-20")$Team[1:20]
teams_1920
droplevels(teams_1920)
# season
team_list <- list(
"teams_0506" = droplevels(filter(summaryGoals, Season == "2005-06")$Team[1:20]),
"teams_0607" = droplevels(filter(summaryGoals, Season == "2006-07")$Team[1:20]),
"teams_0708" = droplevels(filter(summaryGoals, Season == "2007-08")$Team[1:20]),
"teams_0809" = droplevels(filter(summaryGoals, Season == "2008-09")$Team[1:20]),
"teams_0910" = droplevels(filter(summaryGoals, Season == "2009-10")$Team[1:20]),
"teams_1011" = droplevels(filter(summaryGoals, Season == "2010-11")$Team[1:20]),
"teams_1112" = droplevels(filter(summaryGoals, Season == "2011-12")$Team[1:20]),
"teams_1213" = droplevels(filter(summaryGoals, Season == "2012-13")$Team[1:20]),
"teams_1314" = droplevels(filter(summaryGoals, Season == "2013-14")$Team[1:20]),
"teams_1415" = droplevels(filter(summaryGoals, Season == "2014-15")$Team[1:20]),
"teams_1516" = droplevels(filter(summaryGoals, Season == "2015-16")$Team[1:20]),
"teams_1617" = droplevels(filter(summaryGoals, Season == "2016-17")$Team[1:20]),
"teams_1718" = droplevels(filter(summaryGoals, Season == "2017-18")$Team[1:20]),
"teams_1819" = droplevels(filter(summaryGoals, Season == "2018-20")$Team[1:20]),
"teams_1920" = droplevels(filter(summaryGoals, Season == "2019-20")$Team[1:20])
)
source("code/summaryGoals.R")
summaryGoals <- summaryGoals(results)
team_list <- list(
"teams_0506" = droplevels(filter(summaryGoals, Season == "2005-06")$Team[1:20]),
"teams_0607" = droplevels(filter(summaryGoals, Season == "2006-07")$Team[1:20]),
"teams_0708" = droplevels(filter(summaryGoals, Season == "2007-08")$Team[1:20]),
"teams_0809" = droplevels(filter(summaryGoals, Season == "2008-09")$Team[1:20]),
"teams_0910" = droplevels(filter(summaryGoals, Season == "2009-10")$Team[1:20]),
"teams_1011" = droplevels(filter(summaryGoals, Season == "2010-11")$Team[1:20]),
"teams_1112" = droplevels(filter(summaryGoals, Season == "2011-12")$Team[1:20]),
"teams_1213" = droplevels(filter(summaryGoals, Season == "2012-13")$Team[1:20]),
"teams_1314" = droplevels(filter(summaryGoals, Season == "2013-14")$Team[1:20]),
"teams_1415" = droplevels(filter(summaryGoals, Season == "2014-15")$Team[1:20]),
"teams_1516" = droplevels(filter(summaryGoals, Season == "2015-16")$Team[1:20]),
"teams_1617" = droplevels(filter(summaryGoals, Season == "2016-17")$Team[1:20]),
"teams_1718" = droplevels(filter(summaryGoals, Season == "2017-18")$Team[1:20]),
"teams_1819" = droplevels(filter(summaryGoals, Season == "2018-20")$Team[1:20]),
"teams_1920" = droplevels(filter(summaryGoals, Season == "2019-20")$Team[1:20])
)
team_list$teams_0506
View(team_list)
# c. team_list is a list object containing factor vectors which contain the teams for each Premier League
# season
team_list <- list(
"teams_0506" = droplevels(filter(summaryGoals, Season == "2005-06")$Team[1:20]),
"teams_0607" = droplevels(filter(summaryGoals, Season == "2006-07")$Team[1:20]),
"teams_0708" = droplevels(filter(summaryGoals, Season == "2007-08")$Team[1:20]),
"teams_0809" = droplevels(filter(summaryGoals, Season == "2008-09")$Team[1:20]),
"teams_0910" = droplevels(filter(summaryGoals, Season == "2009-10")$Team[1:20]),
"teams_1011" = droplevels(filter(summaryGoals, Season == "2010-11")$Team[1:20]),
"teams_1112" = droplevels(filter(summaryGoals, Season == "2011-12")$Team[1:20]),
"teams_1213" = droplevels(filter(summaryGoals, Season == "2012-13")$Team[1:20]),
"teams_1314" = droplevels(filter(summaryGoals, Season == "2013-14")$Team[1:20]),
"teams_1415" = droplevels(filter(summaryGoals, Season == "2014-15")$Team[1:20]),
"teams_1516" = droplevels(filter(summaryGoals, Season == "2015-16")$Team[1:20]),
"teams_1617" = droplevels(filter(summaryGoals, Season == "2016-17")$Team[1:20]),
"teams_1718" = droplevels(filter(summaryGoals, Season == "2017-18")$Team[1:20]),
"teams_1819" = droplevels(filter(summaryGoals, Season == "2018-19")$Team[1:20]),
"teams_1920" = droplevels(filter(summaryGoals, Season == "2019-20")$Team[1:20])
)
View(team_list)
team_list$teams_1819
View(team_list)
